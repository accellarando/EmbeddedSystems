ARM GAS  /tmp/ccJyD3y6.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.LED_init,"ax",%progbits
  19              		.align	1
  20              		.global	LED_init
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	LED_init:
  26              	.LFB43:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** #include <stdio.h>
   3:Core/Src/main.c **** #include <stdlib.h>
   4:Core/Src/main.c **** #include "stm32f0xx.h"
   5:Core/Src/main.c **** #include "motor.h"
   6:Core/Src/main.c **** 
   7:Core/Src/main.c **** /* ------------------------------------------------------------------------------------------------
   8:Core/Src/main.c ****  *  Global Variable Declarations
   9:Core/Src/main.c ****  *  -----------------------------------------------------------------------------------------------
  10:Core/Src/main.c ****  */
  11:Core/Src/main.c **** volatile uint32_t debouncer;
  12:Core/Src/main.c **** 
  13:Core/Src/main.c **** /* ------------------------------------------------------------------------------------------------
  14:Core/Src/main.c ****  *  Miscellaneous Core Functions
  15:Core/Src/main.c ****  *  -----------------------------------------------------------------------------------------------
  16:Core/Src/main.c ****  */
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** void LED_init(void) {
  27              		.loc 1 18 21 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  19:Core/Src/main.c ****     // Initialize PC8 and PC9 for LED's
  20:Core/Src/main.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;                                          // Enable periphera
  32              		.loc 1 20 5 view .LVU1
  33              		.loc 1 20 8 is_stmt 0 view .LVU2
  34 0000 0D4A     		ldr	r2, .L2
  35 0002 5169     		ldr	r1, [r2, #20]
  36              		.loc 1 20 17 view .LVU3
  37 0004 8023     		movs	r3, #128
  38 0006 1B03     		lsls	r3, r3, #12
ARM GAS  /tmp/ccJyD3y6.s 			page 2


  39 0008 0B43     		orrs	r3, r1
  40 000a 5361     		str	r3, [r2, #20]
  21:Core/Src/main.c ****     GPIOC->MODER |= GPIO_MODER_MODER8_0 | GPIO_MODER_MODER9_0;                  // Set PC8 & PC9 to
  41              		.loc 1 21 5 is_stmt 1 view .LVU4
  42              		.loc 1 21 10 is_stmt 0 view .LVU5
  43 000c 0B4B     		ldr	r3, .L2+4
  44 000e 1968     		ldr	r1, [r3]
  45              		.loc 1 21 18 view .LVU6
  46 0010 A022     		movs	r2, #160
  47 0012 D202     		lsls	r2, r2, #11
  48 0014 0A43     		orrs	r2, r1
  49 0016 1A60     		str	r2, [r3]
  22:Core/Src/main.c ****     GPIOC->OTYPER &= ~(GPIO_OTYPER_OT_8 | GPIO_OTYPER_OT_9);                    // Set to push-pull
  50              		.loc 1 22 5 is_stmt 1 view .LVU7
  51              		.loc 1 22 10 is_stmt 0 view .LVU8
  52 0018 5A68     		ldr	r2, [r3, #4]
  53              		.loc 1 22 19 view .LVU9
  54 001a 0949     		ldr	r1, .L2+8
  55 001c 0A40     		ands	r2, r1
  56 001e 5A60     		str	r2, [r3, #4]
  23:Core/Src/main.c ****     GPIOC->OSPEEDR &= ~((GPIO_OSPEEDR_OSPEEDR8_0 | GPIO_OSPEEDR_OSPEEDR8_1) |
  57              		.loc 1 23 5 is_stmt 1 view .LVU10
  58              		.loc 1 23 10 is_stmt 0 view .LVU11
  59 0020 9A68     		ldr	r2, [r3, #8]
  60              		.loc 1 23 20 view .LVU12
  61 0022 0848     		ldr	r0, .L2+12
  62 0024 0240     		ands	r2, r0
  63 0026 9A60     		str	r2, [r3, #8]
  24:Core/Src/main.c ****                         (GPIO_OSPEEDR_OSPEEDR9_0 | GPIO_OSPEEDR_OSPEEDR9_1));   // Set to low speed
  25:Core/Src/main.c ****     GPIOC->PUPDR &= ~((GPIO_PUPDR_PUPDR8_0 | GPIO_PUPDR_PUPDR8_1) |
  64              		.loc 1 25 5 is_stmt 1 view .LVU13
  65              		.loc 1 25 10 is_stmt 0 view .LVU14
  66 0028 DA68     		ldr	r2, [r3, #12]
  67              		.loc 1 25 18 view .LVU15
  68 002a 0240     		ands	r2, r0
  69 002c DA60     		str	r2, [r3, #12]
  26:Core/Src/main.c ****                       (GPIO_PUPDR_PUPDR9_0 | GPIO_PUPDR_PUPDR9_1));             // Set to no pull-u
  27:Core/Src/main.c ****     GPIOC->ODR &= ~(GPIO_ODR_8 | GPIO_ODR_9);                                   // Shut off LED's
  70              		.loc 1 27 5 is_stmt 1 view .LVU16
  71              		.loc 1 27 10 is_stmt 0 view .LVU17
  72 002e 5A69     		ldr	r2, [r3, #20]
  73              		.loc 1 27 16 view .LVU18
  74 0030 0A40     		ands	r2, r1
  75 0032 5A61     		str	r2, [r3, #20]
  28:Core/Src/main.c **** }
  76              		.loc 1 28 1 view .LVU19
  77              		@ sp needed
  78 0034 7047     		bx	lr
  79              	.L3:
  80 0036 C046     		.align	2
  81              	.L2:
  82 0038 00100240 		.word	1073876992
  83 003c 00080048 		.word	1207961600
  84 0040 FFFCFFFF 		.word	-769
  85 0044 FFFFF0FF 		.word	-983041
  86              		.cfi_endproc
  87              	.LFE43:
ARM GAS  /tmp/ccJyD3y6.s 			page 3


  89              		.section	.text.button_init,"ax",%progbits
  90              		.align	1
  91              		.global	button_init
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  96              	button_init:
  97              	.LFB44:
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** void  button_init(void) {
  98              		.loc 1 30 25 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
  31:Core/Src/main.c ****     // Initialize PA0 for button input
  32:Core/Src/main.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;                                          // Enable periphera
 103              		.loc 1 32 5 view .LVU21
 104              		.loc 1 32 8 is_stmt 0 view .LVU22
 105 0000 0A4A     		ldr	r2, .L5
 106 0002 5169     		ldr	r1, [r2, #20]
 107              		.loc 1 32 17 view .LVU23
 108 0004 8023     		movs	r3, #128
 109 0006 9B02     		lsls	r3, r3, #10
 110 0008 0B43     		orrs	r3, r1
 111 000a 5361     		str	r3, [r2, #20]
  33:Core/Src/main.c ****     GPIOA->MODER &= ~(GPIO_MODER_MODER0_0 | GPIO_MODER_MODER0_1);               // Set PA0 to input
 112              		.loc 1 33 5 is_stmt 1 view .LVU24
 113              		.loc 1 33 10 is_stmt 0 view .LVU25
 114 000c 9022     		movs	r2, #144
 115 000e D205     		lsls	r2, r2, #23
 116 0010 1368     		ldr	r3, [r2]
 117              		.loc 1 33 18 view .LVU26
 118 0012 0321     		movs	r1, #3
 119 0014 8B43     		bics	r3, r1
 120 0016 1360     		str	r3, [r2]
  34:Core/Src/main.c ****     GPIOC->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEEDR0_0 | GPIO_OSPEEDR_OSPEEDR0_1);     // Set to low speed
 121              		.loc 1 34 5 is_stmt 1 view .LVU27
 122              		.loc 1 34 10 is_stmt 0 view .LVU28
 123 0018 054B     		ldr	r3, .L5+4
 124 001a 9A68     		ldr	r2, [r3, #8]
 125              		.loc 1 34 20 view .LVU29
 126 001c 8A43     		bics	r2, r1
 127 001e 9A60     		str	r2, [r3, #8]
  35:Core/Src/main.c ****     GPIOC->PUPDR |= GPIO_PUPDR_PUPDR0_1;                                        // Set to pull-down
 128              		.loc 1 35 5 is_stmt 1 view .LVU30
 129              		.loc 1 35 10 is_stmt 0 view .LVU31
 130 0020 DA68     		ldr	r2, [r3, #12]
 131              		.loc 1 35 18 view .LVU32
 132 0022 0139     		subs	r1, r1, #1
 133 0024 0A43     		orrs	r2, r1
 134 0026 DA60     		str	r2, [r3, #12]
  36:Core/Src/main.c **** }
 135              		.loc 1 36 1 view .LVU33
 136              		@ sp needed
 137 0028 7047     		bx	lr
 138              	.L6:
ARM GAS  /tmp/ccJyD3y6.s 			page 4


 139 002a C046     		.align	2
 140              	.L5:
 141 002c 00100240 		.word	1073876992
 142 0030 00080048 		.word	1207961600
 143              		.cfi_endproc
 144              	.LFE44:
 146              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 147              		.align	1
 148              		.global	HAL_SYSTICK_Callback
 149              		.syntax unified
 150              		.code	16
 151              		.thumb_func
 153              	HAL_SYSTICK_Callback:
 154              	.LFB45:
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Called by SysTick Interrupt
  39:Core/Src/main.c ****  * Performs button debouncing, changes wave type on button rising edge
  40:Core/Src/main.c ****  * Updates frequency output from ADC value
  41:Core/Src/main.c ****  */
  42:Core/Src/main.c **** void HAL_SYSTICK_Callback(void) {
 155              		.loc 1 42 33 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
  43:Core/Src/main.c ****     // Remember that this function is called by the SysTick interrupt
  44:Core/Src/main.c ****     // You can't call any functions in here that use delay
  45:Core/Src/main.c **** 
  46:Core/Src/main.c ****     debouncer = (debouncer << 1);
 160              		.loc 1 46 5 view .LVU35
 161              		.loc 1 46 28 is_stmt 0 view .LVU36
 162 0000 154A     		ldr	r2, .L18
 163 0002 1368     		ldr	r3, [r2]
 164 0004 5B00     		lsls	r3, r3, #1
 165              		.loc 1 46 15 view .LVU37
 166 0006 1360     		str	r3, [r2]
  47:Core/Src/main.c ****     if(GPIOA->IDR & (1 << 0)) {
 167              		.loc 1 47 5 is_stmt 1 view .LVU38
 168              		.loc 1 47 13 is_stmt 0 view .LVU39
 169 0008 9023     		movs	r3, #144
 170 000a DB05     		lsls	r3, r3, #23
 171 000c 1B69     		ldr	r3, [r3, #16]
 172              		.loc 1 47 7 view .LVU40
 173 000e DB07     		lsls	r3, r3, #31
 174 0010 03D5     		bpl	.L8
  48:Core/Src/main.c ****         debouncer |= 0x1;
 175              		.loc 1 48 9 is_stmt 1 view .LVU41
 176              		.loc 1 48 19 is_stmt 0 view .LVU42
 177 0012 1368     		ldr	r3, [r2]
 178 0014 0121     		movs	r1, #1
 179 0016 0B43     		orrs	r3, r1
 180 0018 1360     		str	r3, [r2]
 181              	.L8:
  49:Core/Src/main.c ****     }
  50:Core/Src/main.c **** 
  51:Core/Src/main.c ****     if(debouncer == 0x7FFFFFFF) {
 182              		.loc 1 51 5 is_stmt 1 view .LVU43
ARM GAS  /tmp/ccJyD3y6.s 			page 5


 183              		.loc 1 51 18 is_stmt 0 view .LVU44
 184 001a 0F4B     		ldr	r3, .L18
 185 001c 1A68     		ldr	r2, [r3]
 186              		.loc 1 51 7 view .LVU45
 187 001e 0F4B     		ldr	r3, .L18+4
 188 0020 9A42     		cmp	r2, r3
 189 0022 00D0     		beq	.L16
 190              	.L7:
  52:Core/Src/main.c ****     switch(target_rpm) {
  53:Core/Src/main.c ****         case 80:
  54:Core/Src/main.c ****             target_rpm = 50;
  55:Core/Src/main.c ****             break;
  56:Core/Src/main.c ****         case 50:
  57:Core/Src/main.c ****             target_rpm = 81;
  58:Core/Src/main.c ****             break;
  59:Core/Src/main.c ****         case 0:
  60:Core/Src/main.c ****             target_rpm = 80;
  61:Core/Src/main.c ****             break;
  62:Core/Src/main.c ****         default:
  63:Core/Src/main.c ****             target_rpm = 0;
  64:Core/Src/main.c ****             break;
  65:Core/Src/main.c ****         }
  66:Core/Src/main.c ****     }
  67:Core/Src/main.c **** }
 191              		.loc 1 67 1 view .LVU46
 192              		@ sp needed
 193 0024 7047     		bx	lr
 194              	.L16:
  52:Core/Src/main.c ****     switch(target_rpm) {
 195              		.loc 1 52 5 is_stmt 1 view .LVU47
 196 0026 0E4B     		ldr	r3, .L18+8
 197 0028 1B88     		ldrh	r3, [r3]
 198 002a 1BB2     		sxth	r3, r3
 199 002c 322B     		cmp	r3, #50
 200 002e 0BD0     		beq	.L10
 201 0030 502B     		cmp	r3, #80
 202 0032 05D0     		beq	.L11
 203 0034 002B     		cmp	r3, #0
 204 0036 0BD0     		beq	.L17
  63:Core/Src/main.c ****             break;
 205              		.loc 1 63 13 view .LVU48
  63:Core/Src/main.c ****             break;
 206              		.loc 1 63 24 is_stmt 0 view .LVU49
 207 0038 094B     		ldr	r3, .L18+8
 208 003a 0022     		movs	r2, #0
 209 003c 1A80     		strh	r2, [r3]
  64:Core/Src/main.c ****         }
 210              		.loc 1 64 13 is_stmt 1 view .LVU50
 211              		.loc 1 67 1 is_stmt 0 view .LVU51
 212 003e F1E7     		b	.L7
 213              	.L11:
  54:Core/Src/main.c ****             break;
 214              		.loc 1 54 13 is_stmt 1 view .LVU52
  54:Core/Src/main.c ****             break;
 215              		.loc 1 54 24 is_stmt 0 view .LVU53
 216 0040 074B     		ldr	r3, .L18+8
 217 0042 3222     		movs	r2, #50
ARM GAS  /tmp/ccJyD3y6.s 			page 6


 218 0044 1A80     		strh	r2, [r3]
  55:Core/Src/main.c ****         case 50:
 219              		.loc 1 55 13 is_stmt 1 view .LVU54
 220 0046 EDE7     		b	.L7
 221              	.L10:
  57:Core/Src/main.c ****             break;
 222              		.loc 1 57 13 view .LVU55
  57:Core/Src/main.c ****             break;
 223              		.loc 1 57 24 is_stmt 0 view .LVU56
 224 0048 054B     		ldr	r3, .L18+8
 225 004a 5122     		movs	r2, #81
 226 004c 1A80     		strh	r2, [r3]
  58:Core/Src/main.c ****         case 0:
 227              		.loc 1 58 13 is_stmt 1 view .LVU57
 228 004e E9E7     		b	.L7
 229              	.L17:
  60:Core/Src/main.c ****             break;
 230              		.loc 1 60 13 view .LVU58
  60:Core/Src/main.c ****             break;
 231              		.loc 1 60 24 is_stmt 0 view .LVU59
 232 0050 034B     		ldr	r3, .L18+8
 233 0052 5022     		movs	r2, #80
 234 0054 1A80     		strh	r2, [r3]
  61:Core/Src/main.c ****         default:
 235              		.loc 1 61 13 is_stmt 1 view .LVU60
 236 0056 E5E7     		b	.L7
 237              	.L19:
 238              		.align	2
 239              	.L18:
 240 0058 00000000 		.word	debouncer
 241 005c FFFFFF7F 		.word	2147483647
 242 0060 00000000 		.word	target_rpm
 243              		.cfi_endproc
 244              	.LFE45:
 246              		.section	.text.main,"ax",%progbits
 247              		.align	1
 248              		.global	main
 249              		.syntax unified
 250              		.code	16
 251              		.thumb_func
 253              	main:
 254              	.LVL0:
 255              	.LFB46:
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* ------------------------------------------------------------------------------------------------
  70:Core/Src/main.c ****  * Main Program Code
  71:Core/Src/main.c ****  *
  72:Core/Src/main.c ****  * Starts initialization of peripherals
  73:Core/Src/main.c ****  * Blinks green LED (PC9) in loop as heartbeat
  74:Core/Src/main.c ****  * ------------------------------------------------------------------------------------------------
  75:Core/Src/main.c ****  */
  76:Core/Src/main.c **** volatile uint32_t encoder_count = 0;
  77:Core/Src/main.c **** volatile uint8_t test_switch = 0;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** int main(int argc, char* argv[]) {
 256              		.loc 1 79 34 view -0
 257              		.cfi_startproc
ARM GAS  /tmp/ccJyD3y6.s 			page 7


 258              		@ Volatile: function does not return.
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		.loc 1 79 34 is_stmt 0 view .LVU62
 262 0000 10B5     		push	{r4, lr}
 263              	.LCFI0:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****     debouncer = 0;                          // Initialize global variables
 267              		.loc 1 81 5 is_stmt 1 view .LVU63
 268              		.loc 1 81 15 is_stmt 0 view .LVU64
 269 0002 1D4B     		ldr	r3, .L25
 270 0004 0022     		movs	r2, #0
 271 0006 1A60     		str	r2, [r3]
  82:Core/Src/main.c **** 	HAL_Init();															// Initialize HAL
 272              		.loc 1 82 2 is_stmt 1 view .LVU65
 273 0008 FFF7FEFF 		bl	HAL_Init
 274              	.LVL1:
  83:Core/Src/main.c ****     LED_init();                             // Initialize LED's
 275              		.loc 1 83 5 view .LVU66
 276 000c FFF7FEFF 		bl	LED_init
 277              	.LVL2:
  84:Core/Src/main.c ****     button_init();                          // Initialize button
 278              		.loc 1 84 5 view .LVU67
 279 0010 FFF7FEFF 		bl	button_init
 280              	.LVL3:
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****     motor_init();                           // Initialize motor code
 281              		.loc 1 86 5 view .LVU68
 282 0014 FFF7FEFF 		bl	motor_init
 283              	.LVL4:
 284 0018 12E0     		b	.L24
 285              	.L21:
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****     while (1) {
  89:Core/Src/main.c ****       GPIOC->ODR ^= GPIO_ODR_9;           // Toggle green LED (heartbeat)
  90:Core/Src/main.c **** 			switch (test_switch){
  91:Core/Src/main.c **** 				case 80:
  92:Core/Src/main.c **** 					pwm_setDutyCycleL(0);
 286              		.loc 1 92 6 view .LVU69
 287 001a 0020     		movs	r0, #0
 288 001c FFF7FEFF 		bl	pwm_setDutyCycleL
 289              	.LVL5:
  93:Core/Src/main.c **** 				  HAL_Delay(128);
 290              		.loc 1 93 7 view .LVU70
 291 0020 8020     		movs	r0, #128
 292 0022 FFF7FEFF 		bl	HAL_Delay
 293              	.LVL6:
  94:Core/Src/main.c **** 					set_Forward();
 294              		.loc 1 94 6 view .LVU71
 295 0026 FFF7FEFF 		bl	set_Forward
 296              	.LVL7:
  95:Core/Src/main.c **** 					pwm_setDutyCycleL(100);
 297              		.loc 1 95 6 view .LVU72
 298 002a 6420     		movs	r0, #100
ARM GAS  /tmp/ccJyD3y6.s 			page 8


 299 002c FFF7FEFF 		bl	pwm_setDutyCycleL
 300              	.LVL8:
  96:Core/Src/main.c **** 					break;
 301              		.loc 1 96 6 view .LVU73
 302              	.L23:
  97:Core/Src/main.c **** 				case 160:
  98:Core/Src/main.c **** 					pwm_setDutyCycleL(0);
  99:Core/Src/main.c **** 					HAL_Delay(128);
 100:Core/Src/main.c **** 					set_Backward();
 101:Core/Src/main.c **** 					pwm_setDutyCycleL(100);
 102:Core/Src/main.c **** 					test_switch = 0;
 103:Core/Src/main.c **** 					break;
 104:Core/Src/main.c **** 				default:
 105:Core/Src/main.c **** 					break;
 106:Core/Src/main.c **** 			}
 107:Core/Src/main.c **** //        encoder_count = TIM2->CNT;
 108:Core/Src/main.c ****       HAL_Delay(128);                      // Delay 1/8 second
 303              		.loc 1 108 7 view .LVU74
 304 0030 8020     		movs	r0, #128
 305 0032 FFF7FEFF 		bl	HAL_Delay
 306              	.LVL9:
 109:Core/Src/main.c **** 			test_switch++;
 307              		.loc 1 109 4 view .LVU75
 308              		.loc 1 109 15 is_stmt 0 view .LVU76
 309 0036 114A     		ldr	r2, .L25+4
 310 0038 1378     		ldrb	r3, [r2]
 311 003a 0133     		adds	r3, r3, #1
 312 003c DBB2     		uxtb	r3, r3
 313 003e 1370     		strb	r3, [r2]
  88:Core/Src/main.c ****       GPIOC->ODR ^= GPIO_ODR_9;           // Toggle green LED (heartbeat)
 314              		.loc 1 88 11 is_stmt 1 view .LVU77
 315              	.L24:
  88:Core/Src/main.c ****       GPIOC->ODR ^= GPIO_ODR_9;           // Toggle green LED (heartbeat)
 316              		.loc 1 88 5 view .LVU78
  89:Core/Src/main.c **** 			switch (test_switch){
 317              		.loc 1 89 7 view .LVU79
  89:Core/Src/main.c **** 			switch (test_switch){
 318              		.loc 1 89 12 is_stmt 0 view .LVU80
 319 0040 0F4A     		ldr	r2, .L25+8
 320 0042 5169     		ldr	r1, [r2, #20]
  89:Core/Src/main.c **** 			switch (test_switch){
 321              		.loc 1 89 18 view .LVU81
 322 0044 8023     		movs	r3, #128
 323 0046 9B00     		lsls	r3, r3, #2
 324 0048 4B40     		eors	r3, r1
 325 004a 5361     		str	r3, [r2, #20]
  90:Core/Src/main.c **** 				case 80:
 326              		.loc 1 90 4 is_stmt 1 view .LVU82
 327 004c 0B4B     		ldr	r3, .L25+4
 328 004e 1B78     		ldrb	r3, [r3]
 329 0050 DAB2     		uxtb	r2, r3
 330 0052 502B     		cmp	r3, #80
 331 0054 E1D0     		beq	.L21
 332 0056 A02A     		cmp	r2, #160
 333 0058 EAD1     		bne	.L23
  98:Core/Src/main.c **** 					HAL_Delay(128);
 334              		.loc 1 98 6 view .LVU83
ARM GAS  /tmp/ccJyD3y6.s 			page 9


 335 005a 0020     		movs	r0, #0
 336 005c FFF7FEFF 		bl	pwm_setDutyCycleL
 337              	.LVL10:
  99:Core/Src/main.c **** 					set_Backward();
 338              		.loc 1 99 6 view .LVU84
 339 0060 8020     		movs	r0, #128
 340 0062 FFF7FEFF 		bl	HAL_Delay
 341              	.LVL11:
 100:Core/Src/main.c **** 					pwm_setDutyCycleL(100);
 342              		.loc 1 100 6 view .LVU85
 343 0066 FFF7FEFF 		bl	set_Backward
 344              	.LVL12:
 101:Core/Src/main.c **** 					test_switch = 0;
 345              		.loc 1 101 6 view .LVU86
 346 006a 6420     		movs	r0, #100
 347 006c FFF7FEFF 		bl	pwm_setDutyCycleL
 348              	.LVL13:
 102:Core/Src/main.c **** 					break;
 349              		.loc 1 102 6 view .LVU87
 102:Core/Src/main.c **** 					break;
 350              		.loc 1 102 18 is_stmt 0 view .LVU88
 351 0070 024B     		ldr	r3, .L25+4
 352 0072 0022     		movs	r2, #0
 353 0074 1A70     		strb	r2, [r3]
 103:Core/Src/main.c **** 				default:
 354              		.loc 1 103 6 is_stmt 1 view .LVU89
 355 0076 DBE7     		b	.L23
 356              	.L26:
 357              		.align	2
 358              	.L25:
 359 0078 00000000 		.word	debouncer
 360 007c 00000000 		.word	test_switch
 361 0080 00080048 		.word	1207961600
 362              		.cfi_endproc
 363              	.LFE46:
 365              		.global	test_switch
 366              		.section	.bss.test_switch,"aw",%nobits
 369              	test_switch:
 370 0000 00       		.space	1
 371              		.global	encoder_count
 372              		.section	.bss.encoder_count,"aw",%nobits
 373              		.align	2
 376              	encoder_count:
 377 0000 00000000 		.space	4
 378              		.global	debouncer
 379              		.section	.bss.debouncer,"aw",%nobits
 380              		.align	2
 383              	debouncer:
 384 0000 00000000 		.space	4
 385              		.text
 386              	.Letext0:
 387              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 388              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 389              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 390              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 391              		.file 6 "Core/Inc/motor.h"
 392              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccJyD3y6.s 			page 10


ARM GAS  /tmp/ccJyD3y6.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccJyD3y6.s:19     .text.LED_init:00000000 $t
     /tmp/ccJyD3y6.s:25     .text.LED_init:00000000 LED_init
     /tmp/ccJyD3y6.s:82     .text.LED_init:00000038 $d
     /tmp/ccJyD3y6.s:90     .text.button_init:00000000 $t
     /tmp/ccJyD3y6.s:96     .text.button_init:00000000 button_init
     /tmp/ccJyD3y6.s:141    .text.button_init:0000002c $d
     /tmp/ccJyD3y6.s:147    .text.HAL_SYSTICK_Callback:00000000 $t
     /tmp/ccJyD3y6.s:153    .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
     /tmp/ccJyD3y6.s:240    .text.HAL_SYSTICK_Callback:00000058 $d
     /tmp/ccJyD3y6.s:383    .bss.debouncer:00000000 debouncer
     /tmp/ccJyD3y6.s:247    .text.main:00000000 $t
     /tmp/ccJyD3y6.s:253    .text.main:00000000 main
     /tmp/ccJyD3y6.s:359    .text.main:00000078 $d
     /tmp/ccJyD3y6.s:369    .bss.test_switch:00000000 test_switch
     /tmp/ccJyD3y6.s:370    .bss.test_switch:00000000 $d
     /tmp/ccJyD3y6.s:376    .bss.encoder_count:00000000 encoder_count
     /tmp/ccJyD3y6.s:373    .bss.encoder_count:00000000 $d
     /tmp/ccJyD3y6.s:380    .bss.debouncer:00000000 $d

UNDEFINED SYMBOLS
target_rpm
HAL_Init
motor_init
pwm_setDutyCycleL
HAL_Delay
set_Forward
set_Backward
