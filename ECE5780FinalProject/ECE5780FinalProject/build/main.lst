ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB53:
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** 
  25:Src/main.c    **** /* USER CODE END Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN PTD */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PD */
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PM */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  43:Src/main.c    **** TIM_HandleTypeDef htim2;
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN PV */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END PV */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  50:Src/main.c    **** void SystemClock_Config(void);
  51:Src/main.c    **** static void MX_GPIO_Init(void);
  52:Src/main.c    **** static void MX_TIM2_Init(void);
  53:Src/main.c    **** /* USER CODE BEGIN PFP */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN 0 */
  59:Src/main.c    **** #define LED_RED GPIO_PIN_6
  60:Src/main.c    **** #define LED_BLUE GPIO_PIN_7
  61:Src/main.c    **** #define LED_ORANGE GPIO_PIN_8
  62:Src/main.c    **** #define LED_GREEN GPIO_PIN_9
  63:Src/main.c    **** #define TOGGLE_LED(led) (HAL_GPIO_TogglePin(GPIOC, led))
  64:Src/main.c    **** 
  65:Src/main.c    **** void LED_Init(uint32_t pins) {
  66:Src/main.c    ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  67:Src/main.c    **** 
  68:Src/main.c    ****     GPIO_InitTypeDef gpio_led_init = {pins,
  69:Src/main.c    ****         GPIO_MODE_OUTPUT_PP,
  70:Src/main.c    ****         GPIO_SPEED_FREQ_LOW,
  71:Src/main.c    ****         GPIO_NOPULL
  72:Src/main.c    ****     };
  73:Src/main.c    ****     HAL_GPIO_Init(GPIOC, &gpio_led_init);
  74:Src/main.c    **** }
  75:Src/main.c    **** 
  76:Src/main.c    **** /**
  77:Src/main.c    ****  * @brief Enable proper GPIO pins for USART, and set up their alternate
  78:Src/main.c    ****  *        functions appropriately.
  79:Src/main.c    ****  */
  80:Src/main.c    **** void GPIO_AF_Init() {
  81:Src/main.c    ****     __HAL_RCC_GPIOC_CLK_ENABLE();
  82:Src/main.c    **** 
  83:Src/main.c    ****     GPIO_InitTypeDef gpio_af_init = {GPIO_PIN_4 | GPIO_PIN_5,
  84:Src/main.c    ****         GPIO_MODE_AF_PP,
  85:Src/main.c    ****         GPIO_SPEED_FREQ_HIGH,
  86:Src/main.c    ****         GPIO_NOPULL
  87:Src/main.c    ****     };
  88:Src/main.c    ****     HAL_GPIO_Init(GPIOC, &gpio_af_init);
  89:Src/main.c    **** 
  90:Src/main.c    ****     //Set AF1 on PC4 and PC5
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 3


  91:Src/main.c    ****     GPIOC->AFR[0] &= ~(0xFF << 16);
  92:Src/main.c    ****     GPIOC->AFR[0] |= (0x11 << 16);
  93:Src/main.c    **** }
  94:Src/main.c    **** 
  95:Src/main.c    **** /**
  96:Src/main.c    ****  * @brief Enable the USART3 peripheral.
  97:Src/main.c    ****  */
  98:Src/main.c    **** void USART_Init() {
  99:Src/main.c    ****     //__HAL_RCC_USART3_CLK_ENABLE();
 100:Src/main.c    ****     RCC->APB1ENR |= RCC_APB1ENR_USART3EN;
 101:Src/main.c    **** 
 102:Src/main.c    ****     //Set baud rate
 103:Src/main.c    ****     USART3->CR1 &= ~(1<<15);
 104:Src/main.c    ****     USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 105:Src/main.c    **** 
 106:Src/main.c    ****     //Enable transmitter
 107:Src/main.c    ****     USART3->CR1 |= (1<<3);
 108:Src/main.c    **** 
 109:Src/main.c    ****     //Enable receiver
 110:Src/main.c    ****     USART3->CR1 |= (1<<2);
 111:Src/main.c    **** 
 112:Src/main.c    ****     //Enable the receive register not empty interrupt
 113:Src/main.c    ****     USART3->CR1 |= USART_CR1_RXNEIE;
 114:Src/main.c    **** 
 115:Src/main.c    ****     //Enable USART3
 116:Src/main.c    ****     USART3->CR1 |= 1;
 117:Src/main.c    **** }
 118:Src/main.c    **** 
 119:Src/main.c    **** /**
 120:Src/main.c    ****  * @brief Sends a single character on the USART.
 121:Src/main.c    ****  *
 122:Src/main.c    ****  * @param c: the character to be sent
 123:Src/main.c    ****  */
 124:Src/main.c    **** void USART_SendChar(uint8_t c) {
 125:Src/main.c    ****     while(!(USART3->ISR & USART_ISR_TXE))
 126:Src/main.c    ****         ;
 127:Src/main.c    **** 
 128:Src/main.c    ****     USART3->TDR = c;
 129:Src/main.c    **** }
 130:Src/main.c    **** 
 131:Src/main.c    **** /**
 132:Src/main.c    ****  * @brief Sends a string on the USART.
 133:Src/main.c    ****  *
 134:Src/main.c    ****  * @param p_string: pointer to string to send
 135:Src/main.c    ****  */
 136:Src/main.c    **** void USART_SendString(uint8_t* p_string) {
 137:Src/main.c    ****     while(*p_string != 0) {
 138:Src/main.c    ****         USART_SendChar(*p_string);
 139:Src/main.c    ****         p_string++;
 140:Src/main.c    ****     }
 141:Src/main.c    ****     USART_SendChar(0);
 142:Src/main.c    **** }
 143:Src/main.c    **** 
 144:Src/main.c    **** volatile uint8_t command[2];
 145:Src/main.c    **** volatile uint8_t incomingCommand = 0;
 146:Src/main.c    **** 
 147:Src/main.c    **** void ClearCommand(){
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 4


 148:Src/main.c    ****     uint8_t prompt[] = "CMD> ";
 149:Src/main.c    ****     memset(command, 0, sizeof(command));
 150:Src/main.c    ****     incomingCommand = 0;
 151:Src/main.c    ****     USART_SendString(prompt);
 152:Src/main.c    **** }
 153:Src/main.c    **** 
 154:Src/main.c    **** void USART3_4_IRQHandler(){
 155:Src/main.c    ****     uint8_t err[] = "Command too long!\n";
 156:Src/main.c    ****     incomingCommand = 1;
 157:Src/main.c    ****     while(!(USART3->ISR & (1<<5)))
 158:Src/main.c    ****         ;
 159:Src/main.c    ****     if(command[0])
 160:Src/main.c    ****         if(command[1]){
 161:Src/main.c    ****             USART_SendString(err);
 162:Src/main.c    ****             ClearCommand();
 163:Src/main.c    ****         }
 164:Src/main.c    ****         else
 165:Src/main.c    ****             command[1] = USART3->RDR;
 166:Src/main.c    ****     else
 167:Src/main.c    ****         command[0] = USART3->RDR;
 168:Src/main.c    **** }
 169:Src/main.c    **** 
 170:Src/main.c    **** void ProcessCommand(uint8_t direction, uint8_t distance){
 171:Src/main.c    ****     uint32_t left_motor_pin;
 172:Src/main.c    ****     uint32_t right_motor_pin;
 173:Src/main.c    ****     int32_t CH1_DC = 65535;
 174:Src/main.c    **** 
 175:Src/main.c    ****     uint8_t err[] = "ERROR: Invalid command!\n";
 176:Src/main.c    **** 
 177:Src/main.c    ****     uint8_t forward[] = "Moving forward ";
 178:Src/main.c    ****     uint8_t left[] = "Turning left ";
 179:Src/main.c    ****     uint8_t right[] = "Turning right ";
 180:Src/main.c    **** 
 181:Src/main.c    **** 
 182:Src/main.c    ****     uint8_t one[] = "20\n";
 183:Src/main.c    ****     uint8_t two[] = "40\n";
 184:Src/main.c    ****     uint8_t three[] = "60\n";
 185:Src/main.c    ****     uint8_t four[] = "80\n";
 186:Src/main.c    ****     uint8_t five[] = "100\n";
 187:Src/main.c    ****     uint8_t six[] = "120\n";
 188:Src/main.c    ****     uint8_t seven[] = "140\n";
 189:Src/main.c    ****     uint8_t eight[] = "160\n";
 190:Src/main.c    ****     uint8_t nine[] = "180\n";
 191:Src/main.c    **** 
 192:Src/main.c    ****     if(direction != 'w' && direction != 'a' && direction != 'd'){
 193:Src/main.c    ****         USART_SendString(err);
 194:Src/main.c    ****         ClearCommand();
 195:Src/main.c    ****         return;
 196:Src/main.c    ****     }
 197:Src/main.c    **** 
 198:Src/main.c    ****     uint8_t* part1;
 199:Src/main.c    ****     uint8_t* part2;
 200:Src/main.c    **** 
 201:Src/main.c    ****     switch(direction){
 202:Src/main.c    ****         case 'w':
 203:Src/main.c    ****             part1 = forward;
 204:Src/main.c    ****             break;
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 5


 205:Src/main.c    ****         case 'a':
 206:Src/main.c    ****             part1 = left;
 207:Src/main.c    ****             break;
 208:Src/main.c    ****         case 'd':
 209:Src/main.c    ****             part1 = right;
 210:Src/main.c    ****             break;
 211:Src/main.c    ****         default:
 212:Src/main.c    ****             USART_SendString(err);
 213:Src/main.c    ****             ClearCommand();
 214:Src/main.c    ****     }
 215:Src/main.c    ****     
 216:Src/main.c    ****     switch(distance){
 217:Src/main.c    ****         case '1':
 218:Src/main.c    ****             part2 = one;
 219:Src/main.c    ****             //TODO: Change delay length
 220:Src/main.c    ****             break;
 221:Src/main.c    ****         case '2':
 222:Src/main.c    ****             part2 = two;
 223:Src/main.c    ****             break;
 224:Src/main.c    ****         case '3':
 225:Src/main.c    ****             part2 = three;
 226:Src/main.c    ****             break;
 227:Src/main.c    ****         case '4':
 228:Src/main.c    ****             part2 = four;
 229:Src/main.c    ****             break;
 230:Src/main.c    ****         case '5':
 231:Src/main.c    ****             part2 = five;
 232:Src/main.c    ****             break;
 233:Src/main.c    ****         case '6':
 234:Src/main.c    ****             part2 = six;
 235:Src/main.c    ****             break;
 236:Src/main.c    ****         case '7':
 237:Src/main.c    ****             part2 = seven;
 238:Src/main.c    ****             break;
 239:Src/main.c    ****         case '8':
 240:Src/main.c    ****             part2 = eight;
 241:Src/main.c    ****             break;
 242:Src/main.c    ****         case '9':
 243:Src/main.c    ****             part2 = nine;
 244:Src/main.c    ****             break;
 245:Src/main.c    ****         default:
 246:Src/main.c    ****             USART_SendString(err);
 247:Src/main.c    ****             ClearCommand();
 248:Src/main.c    ****             return;
 249:Src/main.c    ****     }
 250:Src/main.c    **** 
 251:Src/main.c    ****     USART_SendString(part1);
 252:Src/main.c    ****     USART_SendString(part2);
 253:Src/main.c    ****     
 254:Src/main.c    ****     TIM2->CCR1 = CH1_DC;
 255:Src/main.c    ****     HAL_Delay(1000);
 256:Src/main.c    ****     TIM2->CCR1 = 0;
 257:Src/main.c    ****     
 258:Src/main.c    ****     ClearCommand();
 259:Src/main.c    ****     
 260:Src/main.c    ****     
 261:Src/main.c    ****     // Example code while loop
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 6


 262:Src/main.c    **** //    while (1)
 263:Src/main.c    **** //    {
 264:Src/main.c    **** //        while(CH1_DC < 65535)
 265:Src/main.c    **** //        {
 266:Src/main.c    **** //            TIM2->CCR1 = CH1_DC;
 267:Src/main.c    **** //            CH1_DC += 70;
 268:Src/main.c    **** //            HAL_Delay(1);
 269:Src/main.c    **** //        }
 270:Src/main.c    **** //        while(CH1_DC > 0)
 271:Src/main.c    **** //        {
 272:Src/main.c    **** //            TIM2->CCR1 = CH1_DC;
 273:Src/main.c    **** //            CH1_DC -= 70;
 274:Src/main.c    **** //            HAL_Delay(1);
 275:Src/main.c    **** //        }
 276:Src/main.c    **** //    }
 277:Src/main.c    **** }
 278:Src/main.c    **** 
 279:Src/main.c    **** void Ultrasonic_Init(uint32_t pins)
 280:Src/main.c    **** {
 281:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 282:Src/main.c    **** 
 283:Src/main.c    ****     GPIO_InitTypeDef gpio_init = {GPIO_PIN_8 | GPIO_PIN_9,
 284:Src/main.c    ****         GPIO_MODE_INPUT,
 285:Src/main.c    ****         GPIO_SPEED_FREQ_LOW,
 286:Src/main.c    ****         GPIO_NOPULL
 287:Src/main.c    ****     };
 288:Src/main.c    ****     HAL_GPIO_Init(GPIOA, &gpio_init);
 289:Src/main.c    **** }
 290:Src/main.c    **** 
 291:Src/main.c    **** void GetDistance()
 292:Src/main.c    **** {
 293:Src/main.c    ****     
 294:Src/main.c    **** }
 295:Src/main.c    **** 
 296:Src/main.c    **** /* USER CODE END 0 */
 297:Src/main.c    **** 
 298:Src/main.c    **** /**
 299:Src/main.c    ****   * @brief  The application entry point.
 300:Src/main.c    ****   * @retval int
 301:Src/main.c    ****   */
 302:Src/main.c    **** int main(void)
 303:Src/main.c    **** {
 304:Src/main.c    ****     
 305:Src/main.c    ****  
 306:Src/main.c    ****     HAL_Init();
 307:Src/main.c    ****     SystemClock_Config();
 308:Src/main.c    ****     
 309:Src/main.c    ****     //USART Initalizations
 310:Src/main.c    ****     GPIO_AF_Init();
 311:Src/main.c    ****     USART_Init();
 312:Src/main.c    ****     LED_Init(LED_RED | LED_ORANGE | LED_GREEN | LED_BLUE);
 313:Src/main.c    **** 
 314:Src/main.c    ****     NVIC_EnableIRQ(USART3_4_IRQn);
 315:Src/main.c    ****     NVIC_SetPriority(USART3_4_IRQn,1);
 316:Src/main.c    **** 
 317:Src/main.c    ****     uint8_t prompt[] = "CMD> ";
 318:Src/main.c    ****     //TODO: Replace status with actual ultrsonic sensor data.
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 7


 319:Src/main.c    ****     uint8_t* status;
 320:Src/main.c    ****     uint8_t* distance;
 321:Src/main.c    ****     
 322:Src/main.c    ****     //PWM Initalizations
 323:Src/main.c    ****     MX_GPIO_Init();
 324:Src/main.c    ****     MX_TIM2_Init();
 325:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1); //Initalized to GPIO pin PA5
 326:Src/main.c    ****     
 327:Src/main.c    ****     USART_SendString(prompt);
 328:Src/main.c    ****     int count = 0;
 329:Src/main.c    ****     while (1)
 330:Src/main.c    ****     {
 331:Src/main.c    ****         if(count > 1000000)
 332:Src/main.c    ****         {
 333:Src/main.c    ****             count = 0;
 334:Src/main.c    ****             status = "Ultrasonic Distance: ";
 335:Src/main.c    ****             USART_SendString(status);
 336:Src/main.c    ****             distance = 5;
 337:Src/main.c    ****             USART_SendChar(command[0]);
 338:Src/main.c    ****         }
 339:Src/main.c    ****         else
 340:Src/main.c    ****             count++;
 341:Src/main.c    ****         
 342:Src/main.c    ****         
 343:Src/main.c    ****         if(incomingCommand){
 344:Src/main.c    ****             if(command[1]){
 345:Src/main.c    ****                 ProcessCommand(command[0], command[1]);
 346:Src/main.c    ****             }
 347:Src/main.c    ****         }
 348:Src/main.c    ****     }
 349:Src/main.c    **** }
 350:Src/main.c    **** 
 351:Src/main.c    **** /**
 352:Src/main.c    ****   * @brief System Clock Configuration
 353:Src/main.c    ****   * @retval None
 354:Src/main.c    ****   */
 355:Src/main.c    **** void SystemClock_Config(void)
 356:Src/main.c    **** {
 357:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 358:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 359:Src/main.c    **** 
 360:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 361:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 362:Src/main.c    ****   */
 363:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 364:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 365:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 366:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 367:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 368:Src/main.c    ****   {
 369:Src/main.c    ****     Error_Handler();
 370:Src/main.c    ****   }
 371:Src/main.c    **** 
 372:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 373:Src/main.c    ****   */
 374:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 375:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 8


 376:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 377:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 378:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 379:Src/main.c    **** 
 380:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 381:Src/main.c    ****   {
 382:Src/main.c    ****     Error_Handler();
 383:Src/main.c    ****   }
 384:Src/main.c    **** }
 385:Src/main.c    **** 
 386:Src/main.c    **** /**
 387:Src/main.c    ****   * @brief TIM2 Initialization Function
 388:Src/main.c    ****   * @param None
 389:Src/main.c    ****   * @retval None
 390:Src/main.c    ****   */
 391:Src/main.c    **** static void MX_TIM2_Init(void)
 392:Src/main.c    **** {
 393:Src/main.c    **** 
 394:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 395:Src/main.c    **** 
 396:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 397:Src/main.c    **** 
 398:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 399:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 400:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 401:Src/main.c    **** 
 402:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 403:Src/main.c    **** 
 404:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 405:Src/main.c    ****   htim2.Instance = TIM2;
 406:Src/main.c    ****   htim2.Init.Prescaler = 0;
 407:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 408:Src/main.c    ****   htim2.Init.Period = 65535;
 409:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 410:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 411:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 412:Src/main.c    ****   {
 413:Src/main.c    ****     Error_Handler();
 414:Src/main.c    ****   }
 415:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 416:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 417:Src/main.c    ****   {
 418:Src/main.c    ****     Error_Handler();
 419:Src/main.c    ****   }
 420:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 421:Src/main.c    ****   {
 422:Src/main.c    ****     Error_Handler();
 423:Src/main.c    ****   }
 424:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 425:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 426:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 427:Src/main.c    ****   {
 428:Src/main.c    ****     Error_Handler();
 429:Src/main.c    ****   }
 430:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 431:Src/main.c    ****   sConfigOC.Pulse = 0;
 432:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 9


 433:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 434:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 435:Src/main.c    ****   {
 436:Src/main.c    ****     Error_Handler();
 437:Src/main.c    ****   }
 438:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 439:Src/main.c    **** 
 440:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 441:Src/main.c    ****   HAL_TIM_MspPostInit(&htim2);
 442:Src/main.c    **** 
 443:Src/main.c    **** }
 444:Src/main.c    **** 
 445:Src/main.c    **** /**
 446:Src/main.c    ****   * @brief GPIO Initialization Function
 447:Src/main.c    ****   * @param None
 448:Src/main.c    ****   * @retval None
 449:Src/main.c    ****   */
 450:Src/main.c    **** static void MX_GPIO_Init(void)
 451:Src/main.c    **** {
  26              		.loc 1 451 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 452:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 452 3 view .LVU1
  39              		.loc 1 452 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 453:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 454:Src/main.c    **** /* USER CODE END MX_GPIO_Init_1 */
 455:Src/main.c    **** 
 456:Src/main.c    ****   /* GPIO Ports Clock Enable */
 457:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  45              		.loc 1 457 3 is_stmt 1 view .LVU3
  46              	.LBB8:
  47              		.loc 1 457 3 view .LVU4
  48              		.loc 1 457 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C903     		lsls	r1, r1, #15
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 457 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 10


  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 457 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE8:
  62              		.loc 1 457 3 view .LVU8
 458:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 458 3 view .LVU9
  64              	.LBB9:
  65              		.loc 1 458 3 view .LVU10
  66              		.loc 1 458 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 458 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 458 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE9:
  79              		.loc 1 458 3 view .LVU14
 459:Src/main.c    **** 
 460:Src/main.c    ****   /*Configure GPIO pin Output Level */
 461:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
  80              		.loc 1 461 3 view .LVU15
  81 0034 9024     		movs	r4, #144
  82 0036 E405     		lsls	r4, r4, #23
  83 0038 0022     		movs	r2, #0
  84 003a 0121     		movs	r1, #1
  85 003c 2000     		movs	r0, r4
  86 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  87              	.LVL1:
 462:Src/main.c    **** 
 463:Src/main.c    ****   /*Configure GPIO pin : PA0 */
 464:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
  88              		.loc 1 464 3 view .LVU16
  89              		.loc 1 464 23 is_stmt 0 view .LVU17
  90 0042 0123     		movs	r3, #1
  91 0044 0393     		str	r3, [sp, #12]
 465:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  92              		.loc 1 465 3 is_stmt 1 view .LVU18
  93              		.loc 1 465 24 is_stmt 0 view .LVU19
  94 0046 0493     		str	r3, [sp, #16]
 466:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 466 3 is_stmt 1 view .LVU20
  96              		.loc 1 466 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 467:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 467 3 is_stmt 1 view .LVU22
 100              		.loc 1 467 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 468:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 102              		.loc 1 468 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 11


 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 469:Src/main.c    **** 
 470:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 471:Src/main.c    **** /* USER CODE END MX_GPIO_Init_2 */
 472:Src/main.c    **** }
 107              		.loc 1 472 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115              		.cfi_endproc
 116              	.LFE53:
 118              		.section	.text.LED_Init,"ax",%progbits
 119              		.align	1
 120              		.global	LED_Init
 121              		.syntax unified
 122              		.code	16
 123              		.thumb_func
 125              	LED_Init:
 126              	.LVL3:
 127              	.LFB40:
  65:Src/main.c    ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 128              		.loc 1 65 30 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 24
 131              		@ frame_needed = 0, uses_anonymous_args = 0
  65:Src/main.c    ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 132              		.loc 1 65 30 is_stmt 0 view .LVU27
 133 0000 10B5     		push	{r4, lr}
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138 0002 86B0     		sub	sp, sp, #24
 139              	.LCFI3:
 140              		.cfi_def_cfa_offset 32
 141 0004 0400     		movs	r4, r0
  66:Src/main.c    **** 
 142              		.loc 1 66 5 is_stmt 1 view .LVU28
 143              	.LBB10:
  66:Src/main.c    **** 
 144              		.loc 1 66 5 view .LVU29
  66:Src/main.c    **** 
 145              		.loc 1 66 5 view .LVU30
 146 0006 0C4B     		ldr	r3, .L5
 147 0008 5A69     		ldr	r2, [r3, #20]
 148 000a 8021     		movs	r1, #128
 149 000c 0903     		lsls	r1, r1, #12
 150 000e 0A43     		orrs	r2, r1
 151 0010 5A61     		str	r2, [r3, #20]
  66:Src/main.c    **** 
 152              		.loc 1 66 5 view .LVU31
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 12


 153 0012 5B69     		ldr	r3, [r3, #20]
 154 0014 0B40     		ands	r3, r1
 155 0016 0093     		str	r3, [sp]
  66:Src/main.c    **** 
 156              		.loc 1 66 5 view .LVU32
 157 0018 009B     		ldr	r3, [sp]
 158              	.LBE10:
  66:Src/main.c    **** 
 159              		.loc 1 66 5 view .LVU33
  68:Src/main.c    ****         GPIO_MODE_OUTPUT_PP,
 160              		.loc 1 68 5 view .LVU34
  68:Src/main.c    ****         GPIO_MODE_OUTPUT_PP,
 161              		.loc 1 68 22 is_stmt 0 view .LVU35
 162 001a 1422     		movs	r2, #20
 163 001c 0021     		movs	r1, #0
 164 001e 01A8     		add	r0, sp, #4
 165              	.LVL4:
  68:Src/main.c    ****         GPIO_MODE_OUTPUT_PP,
 166              		.loc 1 68 22 view .LVU36
 167 0020 FFF7FEFF 		bl	memset
 168              	.LVL5:
 169 0024 0194     		str	r4, [sp, #4]
 170 0026 0123     		movs	r3, #1
 171 0028 0293     		str	r3, [sp, #8]
  73:Src/main.c    **** }
 172              		.loc 1 73 5 is_stmt 1 view .LVU37
 173 002a 01A9     		add	r1, sp, #4
 174 002c 0348     		ldr	r0, .L5+4
 175 002e FFF7FEFF 		bl	HAL_GPIO_Init
 176              	.LVL6:
  74:Src/main.c    **** 
 177              		.loc 1 74 1 is_stmt 0 view .LVU38
 178 0032 06B0     		add	sp, sp, #24
 179              		@ sp needed
 180              	.LVL7:
  74:Src/main.c    **** 
 181              		.loc 1 74 1 view .LVU39
 182 0034 10BD     		pop	{r4, pc}
 183              	.L6:
 184 0036 C046     		.align	2
 185              	.L5:
 186 0038 00100240 		.word	1073876992
 187 003c 00080048 		.word	1207961600
 188              		.cfi_endproc
 189              	.LFE40:
 191              		.section	.text.GPIO_AF_Init,"ax",%progbits
 192              		.align	1
 193              		.global	GPIO_AF_Init
 194              		.syntax unified
 195              		.code	16
 196              		.thumb_func
 198              	GPIO_AF_Init:
 199              	.LFB41:
  80:Src/main.c    ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 200              		.loc 1 80 21 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 13


 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 10B5     		push	{r4, lr}
 205              	.LCFI4:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 4, -8
 208              		.cfi_offset 14, -4
 209 0002 86B0     		sub	sp, sp, #24
 210              	.LCFI5:
 211              		.cfi_def_cfa_offset 32
  81:Src/main.c    **** 
 212              		.loc 1 81 5 view .LVU41
 213              	.LBB11:
  81:Src/main.c    **** 
 214              		.loc 1 81 5 view .LVU42
  81:Src/main.c    **** 
 215              		.loc 1 81 5 view .LVU43
 216 0004 124B     		ldr	r3, .L8
 217 0006 5A69     		ldr	r2, [r3, #20]
 218 0008 8021     		movs	r1, #128
 219 000a 0903     		lsls	r1, r1, #12
 220 000c 0A43     		orrs	r2, r1
 221 000e 5A61     		str	r2, [r3, #20]
  81:Src/main.c    **** 
 222              		.loc 1 81 5 view .LVU44
 223 0010 5B69     		ldr	r3, [r3, #20]
 224 0012 0B40     		ands	r3, r1
 225 0014 0093     		str	r3, [sp]
  81:Src/main.c    **** 
 226              		.loc 1 81 5 view .LVU45
 227 0016 009B     		ldr	r3, [sp]
 228              	.LBE11:
  81:Src/main.c    **** 
 229              		.loc 1 81 5 view .LVU46
  83:Src/main.c    ****         GPIO_MODE_AF_PP,
 230              		.loc 1 83 5 view .LVU47
  83:Src/main.c    ****         GPIO_MODE_AF_PP,
 231              		.loc 1 83 22 is_stmt 0 view .LVU48
 232 0018 1422     		movs	r2, #20
 233 001a 0021     		movs	r1, #0
 234 001c 01A8     		add	r0, sp, #4
 235 001e FFF7FEFF 		bl	memset
 236              	.LVL8:
 237 0022 3023     		movs	r3, #48
 238 0024 0193     		str	r3, [sp, #4]
 239 0026 2E3B     		subs	r3, r3, #46
 240 0028 0293     		str	r3, [sp, #8]
 241 002a 0133     		adds	r3, r3, #1
 242 002c 0393     		str	r3, [sp, #12]
  88:Src/main.c    **** 
 243              		.loc 1 88 5 is_stmt 1 view .LVU49
 244 002e 094C     		ldr	r4, .L8+4
 245 0030 01A9     		add	r1, sp, #4
 246 0032 2000     		movs	r0, r4
 247 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL9:
  91:Src/main.c    ****     GPIOC->AFR[0] |= (0x11 << 16);
 249              		.loc 1 91 5 view .LVU50
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 14


  91:Src/main.c    ****     GPIOC->AFR[0] |= (0x11 << 16);
 250              		.loc 1 91 15 is_stmt 0 view .LVU51
 251 0038 236A     		ldr	r3, [r4, #32]
  91:Src/main.c    ****     GPIOC->AFR[0] |= (0x11 << 16);
 252              		.loc 1 91 19 view .LVU52
 253 003a 074A     		ldr	r2, .L8+8
 254 003c 1340     		ands	r3, r2
 255 003e 2362     		str	r3, [r4, #32]
  92:Src/main.c    **** }
 256              		.loc 1 92 5 is_stmt 1 view .LVU53
  92:Src/main.c    **** }
 257              		.loc 1 92 15 is_stmt 0 view .LVU54
 258 0040 226A     		ldr	r2, [r4, #32]
  92:Src/main.c    **** }
 259              		.loc 1 92 19 view .LVU55
 260 0042 8823     		movs	r3, #136
 261 0044 5B03     		lsls	r3, r3, #13
 262 0046 1343     		orrs	r3, r2
 263 0048 2362     		str	r3, [r4, #32]
  93:Src/main.c    **** 
 264              		.loc 1 93 1 view .LVU56
 265 004a 06B0     		add	sp, sp, #24
 266              		@ sp needed
 267 004c 10BD     		pop	{r4, pc}
 268              	.L9:
 269 004e C046     		.align	2
 270              	.L8:
 271 0050 00100240 		.word	1073876992
 272 0054 00080048 		.word	1207961600
 273 0058 FFFF00FF 		.word	-16711681
 274              		.cfi_endproc
 275              	.LFE41:
 277              		.global	__aeabi_uidiv
 278              		.section	.text.USART_Init,"ax",%progbits
 279              		.align	1
 280              		.global	USART_Init
 281              		.syntax unified
 282              		.code	16
 283              		.thumb_func
 285              	USART_Init:
 286              	.LFB42:
  98:Src/main.c    ****     //__HAL_RCC_USART3_CLK_ENABLE();
 287              		.loc 1 98 19 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 10B5     		push	{r4, lr}
 292              	.LCFI6:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 100:Src/main.c    **** 
 296              		.loc 1 100 5 view .LVU58
 100:Src/main.c    **** 
 297              		.loc 1 100 8 is_stmt 0 view .LVU59
 298 0002 114A     		ldr	r2, .L11
 299 0004 D169     		ldr	r1, [r2, #28]
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 15


 100:Src/main.c    **** 
 300              		.loc 1 100 18 view .LVU60
 301 0006 8023     		movs	r3, #128
 302 0008 DB02     		lsls	r3, r3, #11
 303 000a 0B43     		orrs	r3, r1
 304 000c D361     		str	r3, [r2, #28]
 103:Src/main.c    ****     USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 305              		.loc 1 103 5 is_stmt 1 view .LVU61
 103:Src/main.c    ****     USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 306              		.loc 1 103 11 is_stmt 0 view .LVU62
 307 000e 0F4C     		ldr	r4, .L11+4
 308 0010 2368     		ldr	r3, [r4]
 103:Src/main.c    ****     USART3->BRR = HAL_RCC_GetHCLKFreq() / 115200;
 309              		.loc 1 103 17 view .LVU63
 310 0012 0F4A     		ldr	r2, .L11+8
 311 0014 1340     		ands	r3, r2
 312 0016 2360     		str	r3, [r4]
 104:Src/main.c    **** 
 313              		.loc 1 104 5 is_stmt 1 view .LVU64
 104:Src/main.c    **** 
 314              		.loc 1 104 19 is_stmt 0 view .LVU65
 315 0018 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 316              	.LVL10:
 104:Src/main.c    **** 
 317              		.loc 1 104 41 view .LVU66
 318 001c E121     		movs	r1, #225
 319 001e 4902     		lsls	r1, r1, #9
 320 0020 FFF7FEFF 		bl	__aeabi_uidiv
 321              	.LVL11:
 104:Src/main.c    **** 
 322              		.loc 1 104 17 view .LVU67
 323 0024 E060     		str	r0, [r4, #12]
 107:Src/main.c    **** 
 324              		.loc 1 107 5 is_stmt 1 view .LVU68
 107:Src/main.c    **** 
 325              		.loc 1 107 11 is_stmt 0 view .LVU69
 326 0026 2368     		ldr	r3, [r4]
 107:Src/main.c    **** 
 327              		.loc 1 107 17 view .LVU70
 328 0028 0822     		movs	r2, #8
 329 002a 1343     		orrs	r3, r2
 330 002c 2360     		str	r3, [r4]
 110:Src/main.c    **** 
 331              		.loc 1 110 5 is_stmt 1 view .LVU71
 110:Src/main.c    **** 
 332              		.loc 1 110 11 is_stmt 0 view .LVU72
 333 002e 2368     		ldr	r3, [r4]
 110:Src/main.c    **** 
 334              		.loc 1 110 17 view .LVU73
 335 0030 043A     		subs	r2, r2, #4
 336 0032 1343     		orrs	r3, r2
 337 0034 2360     		str	r3, [r4]
 113:Src/main.c    **** 
 338              		.loc 1 113 5 is_stmt 1 view .LVU74
 113:Src/main.c    **** 
 339              		.loc 1 113 11 is_stmt 0 view .LVU75
 340 0036 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 16


 113:Src/main.c    **** 
 341              		.loc 1 113 17 view .LVU76
 342 0038 1C32     		adds	r2, r2, #28
 343 003a 1343     		orrs	r3, r2
 344 003c 2360     		str	r3, [r4]
 116:Src/main.c    **** }
 345              		.loc 1 116 5 is_stmt 1 view .LVU77
 116:Src/main.c    **** }
 346              		.loc 1 116 11 is_stmt 0 view .LVU78
 347 003e 2368     		ldr	r3, [r4]
 116:Src/main.c    **** }
 348              		.loc 1 116 17 view .LVU79
 349 0040 1F3A     		subs	r2, r2, #31
 350 0042 1343     		orrs	r3, r2
 351 0044 2360     		str	r3, [r4]
 117:Src/main.c    **** 
 352              		.loc 1 117 1 view .LVU80
 353              		@ sp needed
 354 0046 10BD     		pop	{r4, pc}
 355              	.L12:
 356              		.align	2
 357              	.L11:
 358 0048 00100240 		.word	1073876992
 359 004c 00480040 		.word	1073760256
 360 0050 FF7FFFFF 		.word	-32769
 361              		.cfi_endproc
 362              	.LFE42:
 364              		.section	.text.USART_SendChar,"ax",%progbits
 365              		.align	1
 366              		.global	USART_SendChar
 367              		.syntax unified
 368              		.code	16
 369              		.thumb_func
 371              	USART_SendChar:
 372              	.LFB43:
 124:Src/main.c    ****     while(!(USART3->ISR & USART_ISR_TXE))
 373              		.loc 1 124 32 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.LVL12:
 379              	.L14:
 125:Src/main.c    ****         ;
 380              		.loc 1 125 11 discriminator 1 view .LVU82
 125:Src/main.c    ****         ;
 381              		.loc 1 125 19 is_stmt 0 discriminator 1 view .LVU83
 382 0000 034B     		ldr	r3, .L16
 383 0002 DB69     		ldr	r3, [r3, #28]
 125:Src/main.c    ****         ;
 384              		.loc 1 125 11 discriminator 1 view .LVU84
 385 0004 1B06     		lsls	r3, r3, #24
 386 0006 FBD5     		bpl	.L14
 128:Src/main.c    **** }
 387              		.loc 1 128 5 is_stmt 1 view .LVU85
 128:Src/main.c    **** }
 388              		.loc 1 128 17 is_stmt 0 view .LVU86
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 17


 389 0008 014B     		ldr	r3, .L16
 390 000a 1885     		strh	r0, [r3, #40]
 129:Src/main.c    **** 
 391              		.loc 1 129 1 view .LVU87
 392              		@ sp needed
 393 000c 7047     		bx	lr
 394              	.L17:
 395 000e C046     		.align	2
 396              	.L16:
 397 0010 00480040 		.word	1073760256
 398              		.cfi_endproc
 399              	.LFE43:
 401              		.section	.text.USART_SendString,"ax",%progbits
 402              		.align	1
 403              		.global	USART_SendString
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	USART_SendString:
 409              	.LVL13:
 410              	.LFB44:
 136:Src/main.c    ****     while(*p_string != 0) {
 411              		.loc 1 136 42 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 136:Src/main.c    ****     while(*p_string != 0) {
 415              		.loc 1 136 42 is_stmt 0 view .LVU89
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI7:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 421 0002 0400     		movs	r4, r0
 137:Src/main.c    ****         USART_SendChar(*p_string);
 422              		.loc 1 137 5 is_stmt 1 view .LVU90
 137:Src/main.c    ****         USART_SendChar(*p_string);
 423              		.loc 1 137 10 is_stmt 0 view .LVU91
 424 0004 02E0     		b	.L19
 425              	.LVL14:
 426              	.L20:
 138:Src/main.c    ****         p_string++;
 427              		.loc 1 138 9 is_stmt 1 view .LVU92
 428 0006 FFF7FEFF 		bl	USART_SendChar
 429              	.LVL15:
 139:Src/main.c    ****     }
 430              		.loc 1 139 9 view .LVU93
 139:Src/main.c    ****     }
 431              		.loc 1 139 17 is_stmt 0 view .LVU94
 432 000a 0134     		adds	r4, r4, #1
 433              	.LVL16:
 434              	.L19:
 137:Src/main.c    ****         USART_SendChar(*p_string);
 435              		.loc 1 137 21 is_stmt 1 view .LVU95
 137:Src/main.c    ****         USART_SendChar(*p_string);
 436              		.loc 1 137 11 is_stmt 0 view .LVU96
 437 000c 2078     		ldrb	r0, [r4]
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 18


 137:Src/main.c    ****         USART_SendChar(*p_string);
 438              		.loc 1 137 21 view .LVU97
 439 000e 0028     		cmp	r0, #0
 440 0010 F9D1     		bne	.L20
 141:Src/main.c    **** }
 441              		.loc 1 141 5 is_stmt 1 view .LVU98
 442 0012 FFF7FEFF 		bl	USART_SendChar
 443              	.LVL17:
 142:Src/main.c    **** 
 444              		.loc 1 142 1 is_stmt 0 view .LVU99
 445              		@ sp needed
 446              	.LVL18:
 142:Src/main.c    **** 
 447              		.loc 1 142 1 view .LVU100
 448 0016 10BD     		pop	{r4, pc}
 449              		.cfi_endproc
 450              	.LFE44:
 452              		.section	.rodata.ClearCommand.str1.4,"aMS",%progbits,1
 453              		.align	2
 454              	.LC0:
 455 0000 434D443E 		.ascii	"CMD> \000"
 455      2000
 456              		.section	.text.ClearCommand,"ax",%progbits
 457              		.align	1
 458              		.global	ClearCommand
 459              		.syntax unified
 460              		.code	16
 461              		.thumb_func
 463              	ClearCommand:
 464              	.LFB45:
 147:Src/main.c    ****     uint8_t prompt[] = "CMD> ";
 465              		.loc 1 147 20 is_stmt 1 view -0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 8
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 00B5     		push	{lr}
 470              	.LCFI8:
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 14, -4
 473 0002 83B0     		sub	sp, sp, #12
 474              	.LCFI9:
 475              		.cfi_def_cfa_offset 16
 148:Src/main.c    ****     memset(command, 0, sizeof(command));
 476              		.loc 1 148 5 view .LVU102
 148:Src/main.c    ****     memset(command, 0, sizeof(command));
 477              		.loc 1 148 13 is_stmt 0 view .LVU103
 478 0004 074B     		ldr	r3, .L22
 479 0006 1A68     		ldr	r2, [r3]
 480 0008 0092     		str	r2, [sp]
 481 000a 9B88     		ldrh	r3, [r3, #4]
 482 000c 6A46     		mov	r2, sp
 483 000e 9380     		strh	r3, [r2, #4]
 149:Src/main.c    ****     incomingCommand = 0;
 484              		.loc 1 149 5 is_stmt 1 view .LVU104
 485 0010 054B     		ldr	r3, .L22+4
 486 0012 0022     		movs	r2, #0
 487 0014 1A80     		strh	r2, [r3]
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 19


 150:Src/main.c    ****     USART_SendString(prompt);
 488              		.loc 1 150 5 view .LVU105
 150:Src/main.c    ****     USART_SendString(prompt);
 489              		.loc 1 150 21 is_stmt 0 view .LVU106
 490 0016 054B     		ldr	r3, .L22+8
 491 0018 1A70     		strb	r2, [r3]
 151:Src/main.c    **** }
 492              		.loc 1 151 5 is_stmt 1 view .LVU107
 493 001a 6846     		mov	r0, sp
 494 001c FFF7FEFF 		bl	USART_SendString
 495              	.LVL19:
 152:Src/main.c    **** 
 496              		.loc 1 152 1 is_stmt 0 view .LVU108
 497 0020 03B0     		add	sp, sp, #12
 498              		@ sp needed
 499 0022 00BD     		pop	{pc}
 500              	.L23:
 501              		.align	2
 502              	.L22:
 503 0024 00000000 		.word	.LC0
 504 0028 00000000 		.word	command
 505 002c 00000000 		.word	incomingCommand
 506              		.cfi_endproc
 507              	.LFE45:
 509              		.section	.rodata.USART3_4_IRQHandler.str1.4,"aMS",%progbits,1
 510              		.align	2
 511              	.LC4:
 512 0000 436F6D6D 		.ascii	"Command too long!\012\000"
 512      616E6420 
 512      746F6F20 
 512      6C6F6E67 
 512      210A00
 513              		.section	.text.USART3_4_IRQHandler,"ax",%progbits
 514              		.align	1
 515              		.global	USART3_4_IRQHandler
 516              		.syntax unified
 517              		.code	16
 518              		.thumb_func
 520              	USART3_4_IRQHandler:
 521              	.LFB46:
 154:Src/main.c    ****     uint8_t err[] = "Command too long!\n";
 522              		.loc 1 154 27 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 24
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 30B5     		push	{r4, r5, lr}
 527              	.LCFI10:
 528              		.cfi_def_cfa_offset 12
 529              		.cfi_offset 4, -12
 530              		.cfi_offset 5, -8
 531              		.cfi_offset 14, -4
 532 0002 87B0     		sub	sp, sp, #28
 533              	.LCFI11:
 534              		.cfi_def_cfa_offset 40
 155:Src/main.c    ****     incomingCommand = 1;
 535              		.loc 1 155 5 view .LVU110
 155:Src/main.c    ****     incomingCommand = 1;
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 20


 536              		.loc 1 155 13 is_stmt 0 view .LVU111
 537 0004 01AA     		add	r2, sp, #4
 538 0006 164B     		ldr	r3, .L31
 539 0008 1800     		movs	r0, r3
 540 000a 38C8     		ldmia	r0!, {r3, r4, r5}
 541 000c 38C2     		stmia	r2!, {r3, r4, r5}
 542 000e 0368     		ldr	r3, [r0]
 543 0010 1360     		str	r3, [r2]
 544 0012 8388     		ldrh	r3, [r0, #4]
 545 0014 9380     		strh	r3, [r2, #4]
 546 0016 8379     		ldrb	r3, [r0, #6]
 547 0018 9371     		strb	r3, [r2, #6]
 156:Src/main.c    ****     while(!(USART3->ISR & (1<<5)))
 548              		.loc 1 156 5 is_stmt 1 view .LVU112
 156:Src/main.c    ****     while(!(USART3->ISR & (1<<5)))
 549              		.loc 1 156 21 is_stmt 0 view .LVU113
 550 001a 124B     		ldr	r3, .L31+4
 551 001c 0122     		movs	r2, #1
 552 001e 1A70     		strb	r2, [r3]
 157:Src/main.c    ****         ;
 553              		.loc 1 157 5 is_stmt 1 view .LVU114
 554              	.L25:
 157:Src/main.c    ****         ;
 555              		.loc 1 157 11 discriminator 1 view .LVU115
 157:Src/main.c    ****         ;
 556              		.loc 1 157 19 is_stmt 0 discriminator 1 view .LVU116
 557 0020 114B     		ldr	r3, .L31+8
 558 0022 DB69     		ldr	r3, [r3, #28]
 157:Src/main.c    ****         ;
 559              		.loc 1 157 11 discriminator 1 view .LVU117
 560 0024 9B06     		lsls	r3, r3, #26
 561 0026 FBD5     		bpl	.L25
 159:Src/main.c    ****         if(command[1]){
 562              		.loc 1 159 5 is_stmt 1 view .LVU118
 159:Src/main.c    ****         if(command[1]){
 563              		.loc 1 159 15 is_stmt 0 view .LVU119
 564 0028 104B     		ldr	r3, .L31+12
 565 002a 1B78     		ldrb	r3, [r3]
 159:Src/main.c    ****         if(command[1]){
 566              		.loc 1 159 7 view .LVU120
 567 002c 002B     		cmp	r3, #0
 568 002e 0FD0     		beq	.L26
 160:Src/main.c    ****             USART_SendString(err);
 569              		.loc 1 160 9 is_stmt 1 view .LVU121
 160:Src/main.c    ****             USART_SendString(err);
 570              		.loc 1 160 19 is_stmt 0 view .LVU122
 571 0030 0E4B     		ldr	r3, .L31+12
 572 0032 5B78     		ldrb	r3, [r3, #1]
 160:Src/main.c    ****             USART_SendString(err);
 573              		.loc 1 160 11 view .LVU123
 574 0034 002B     		cmp	r3, #0
 575 0036 05D1     		bne	.L30
 165:Src/main.c    ****     else
 576              		.loc 1 165 13 is_stmt 1 view .LVU124
 165:Src/main.c    ****     else
 577              		.loc 1 165 32 is_stmt 0 view .LVU125
 578 0038 0B4B     		ldr	r3, .L31+8
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 21


 579 003a 9B8C     		ldrh	r3, [r3, #36]
 165:Src/main.c    ****     else
 580              		.loc 1 165 24 view .LVU126
 581 003c DBB2     		uxtb	r3, r3
 582 003e 0B4A     		ldr	r2, .L31+12
 583 0040 5370     		strb	r3, [r2, #1]
 584 0042 0AE0     		b	.L24
 585              	.L30:
 161:Src/main.c    ****             ClearCommand();
 586              		.loc 1 161 13 is_stmt 1 view .LVU127
 587 0044 01A8     		add	r0, sp, #4
 588 0046 FFF7FEFF 		bl	USART_SendString
 589              	.LVL20:
 162:Src/main.c    ****         }
 590              		.loc 1 162 13 view .LVU128
 591 004a FFF7FEFF 		bl	ClearCommand
 592              	.LVL21:
 593 004e 04E0     		b	.L24
 594              	.L26:
 167:Src/main.c    **** }
 595              		.loc 1 167 9 view .LVU129
 167:Src/main.c    **** }
 596              		.loc 1 167 28 is_stmt 0 view .LVU130
 597 0050 054B     		ldr	r3, .L31+8
 598 0052 9B8C     		ldrh	r3, [r3, #36]
 167:Src/main.c    **** }
 599              		.loc 1 167 20 view .LVU131
 600 0054 DBB2     		uxtb	r3, r3
 601 0056 054A     		ldr	r2, .L31+12
 602 0058 1370     		strb	r3, [r2]
 603              	.L24:
 168:Src/main.c    **** 
 604              		.loc 1 168 1 view .LVU132
 605 005a 07B0     		add	sp, sp, #28
 606              		@ sp needed
 607 005c 30BD     		pop	{r4, r5, pc}
 608              	.L32:
 609 005e C046     		.align	2
 610              	.L31:
 611 0060 00000000 		.word	.LC4
 612 0064 00000000 		.word	incomingCommand
 613 0068 00480040 		.word	1073760256
 614 006c 00000000 		.word	command
 615              		.cfi_endproc
 616              	.LFE46:
 618              		.section	.rodata.ProcessCommand.str1.4,"aMS",%progbits,1
 619              		.align	2
 620              	.LC8:
 621 0000 4552524F 		.ascii	"ERROR: Invalid command!\012\000"
 621      523A2049 
 621      6E76616C 
 621      69642063 
 621      6F6D6D61 
 622 0019 000000   		.align	2
 623              	.LC10:
 624 001c 4D6F7669 		.ascii	"Moving forward \000"
 624      6E672066 
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 22


 624      6F727761 
 624      72642000 
 625              		.align	2
 626              	.LC12:
 627 002c 5475726E 		.ascii	"Turning left \000"
 627      696E6720 
 627      6C656674 
 627      2000
 628 003a 0000     		.align	2
 629              	.LC14:
 630 003c 5475726E 		.ascii	"Turning right \000"
 630      696E6720 
 630      72696768 
 630      742000
 631 004b 00       		.align	2
 632              	.LC16:
 633 004c 3130300A 		.ascii	"100\012\000"
 633      00
 634 0051 000000   		.align	2
 635              	.LC18:
 636 0054 3132300A 		.ascii	"120\012\000"
 636      00
 637 0059 000000   		.align	2
 638              	.LC20:
 639 005c 3134300A 		.ascii	"140\012\000"
 639      00
 640 0061 000000   		.align	2
 641              	.LC22:
 642 0064 3136300A 		.ascii	"160\012\000"
 642      00
 643 0069 000000   		.align	2
 644              	.LC24:
 645 006c 3138300A 		.ascii	"180\012\000"
 645      00
 646              		.section	.text.ProcessCommand,"ax",%progbits
 647              		.align	1
 648              		.global	ProcessCommand
 649              		.syntax unified
 650              		.code	16
 651              		.thumb_func
 653              	ProcessCommand:
 654              	.LVL22:
 655              	.LFB47:
 170:Src/main.c    ****     uint32_t left_motor_pin;
 656              		.loc 1 170 57 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 136
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 170:Src/main.c    ****     uint32_t left_motor_pin;
 660              		.loc 1 170 57 is_stmt 0 view .LVU134
 661 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 662              	.LCFI12:
 663              		.cfi_def_cfa_offset 20
 664              		.cfi_offset 4, -20
 665              		.cfi_offset 5, -16
 666              		.cfi_offset 6, -12
 667              		.cfi_offset 7, -8
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 23


 668              		.cfi_offset 14, -4
 669 0002 A3B0     		sub	sp, sp, #140
 670              	.LCFI13:
 671              		.cfi_def_cfa_offset 160
 171:Src/main.c    ****     uint32_t right_motor_pin;
 672              		.loc 1 171 5 is_stmt 1 view .LVU135
 172:Src/main.c    ****     int32_t CH1_DC = 65535;
 673              		.loc 1 172 5 view .LVU136
 173:Src/main.c    **** 
 674              		.loc 1 173 5 view .LVU137
 675              	.LVL23:
 175:Src/main.c    **** 
 676              		.loc 1 175 5 view .LVU138
 175:Src/main.c    **** 
 677              		.loc 1 175 13 is_stmt 0 view .LVU139
 678 0004 1BAC     		add	r4, sp, #108
 679 0006 434B     		ldr	r3, .L53
 680 0008 2200     		movs	r2, r4
 681 000a E0CB     		ldmia	r3!, {r5, r6, r7}
 682 000c E0C2     		stmia	r2!, {r5, r6, r7}
 683 000e 70CB     		ldmia	r3!, {r4, r5, r6}
 684 0010 70C2     		stmia	r2!, {r4, r5, r6}
 685 0012 1B78     		ldrb	r3, [r3]
 686 0014 1370     		strb	r3, [r2]
 177:Src/main.c    ****     uint8_t left[] = "Turning left ";
 687              		.loc 1 177 5 is_stmt 1 view .LVU140
 177:Src/main.c    ****     uint8_t left[] = "Turning left ";
 688              		.loc 1 177 13 is_stmt 0 view .LVU141
 689 0016 17AA     		add	r2, sp, #92
 690 0018 3F4B     		ldr	r3, .L53+4
 691 001a E0CB     		ldmia	r3!, {r5, r6, r7}
 692 001c E0C2     		stmia	r2!, {r5, r6, r7}
 693 001e 1B68     		ldr	r3, [r3]
 694 0020 1360     		str	r3, [r2]
 178:Src/main.c    ****     uint8_t right[] = "Turning right ";
 695              		.loc 1 178 5 is_stmt 1 view .LVU142
 178:Src/main.c    ****     uint8_t right[] = "Turning right ";
 696              		.loc 1 178 13 is_stmt 0 view .LVU143
 697 0022 13AA     		add	r2, sp, #76
 698 0024 3D4B     		ldr	r3, .L53+8
 699 0026 E0CB     		ldmia	r3!, {r5, r6, r7}
 700 0028 E0C2     		stmia	r2!, {r5, r6, r7}
 701 002a 1B88     		ldrh	r3, [r3]
 702 002c 1380     		strh	r3, [r2]
 179:Src/main.c    **** 
 703              		.loc 1 179 5 is_stmt 1 view .LVU144
 179:Src/main.c    **** 
 704              		.loc 1 179 13 is_stmt 0 view .LVU145
 705 002e 0FAA     		add	r2, sp, #60
 706 0030 3B4B     		ldr	r3, .L53+12
 707 0032 E0CB     		ldmia	r3!, {r5, r6, r7}
 708 0034 E0C2     		stmia	r2!, {r5, r6, r7}
 709 0036 1400     		movs	r4, r2
 710 0038 1A88     		ldrh	r2, [r3]
 711 003a 2280     		strh	r2, [r4]
 712 003c 9B78     		ldrb	r3, [r3, #2]
 713 003e A370     		strb	r3, [r4, #2]
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 24


 182:Src/main.c    ****     uint8_t two[] = "40\n";
 714              		.loc 1 182 5 is_stmt 1 view .LVU146
 182:Src/main.c    ****     uint8_t two[] = "40\n";
 715              		.loc 1 182 13 is_stmt 0 view .LVU147
 716 0040 384B     		ldr	r3, .L53+16
 717 0042 0E93     		str	r3, [sp, #56]
 183:Src/main.c    ****     uint8_t three[] = "60\n";
 718              		.loc 1 183 5 is_stmt 1 view .LVU148
 183:Src/main.c    ****     uint8_t three[] = "60\n";
 719              		.loc 1 183 13 is_stmt 0 view .LVU149
 720 0044 384B     		ldr	r3, .L53+20
 721 0046 0D93     		str	r3, [sp, #52]
 184:Src/main.c    ****     uint8_t four[] = "80\n";
 722              		.loc 1 184 5 is_stmt 1 view .LVU150
 184:Src/main.c    ****     uint8_t four[] = "80\n";
 723              		.loc 1 184 13 is_stmt 0 view .LVU151
 724 0048 384B     		ldr	r3, .L53+24
 725 004a 0C93     		str	r3, [sp, #48]
 185:Src/main.c    ****     uint8_t five[] = "100\n";
 726              		.loc 1 185 5 is_stmt 1 view .LVU152
 185:Src/main.c    ****     uint8_t five[] = "100\n";
 727              		.loc 1 185 13 is_stmt 0 view .LVU153
 728 004c 384B     		ldr	r3, .L53+28
 729 004e 0B93     		str	r3, [sp, #44]
 186:Src/main.c    ****     uint8_t six[] = "120\n";
 730              		.loc 1 186 5 is_stmt 1 view .LVU154
 186:Src/main.c    ****     uint8_t six[] = "120\n";
 731              		.loc 1 186 13 is_stmt 0 view .LVU155
 732 0050 384B     		ldr	r3, .L53+32
 733 0052 1A68     		ldr	r2, [r3]
 734 0054 0992     		str	r2, [sp, #36]
 735 0056 1A79     		ldrb	r2, [r3, #4]
 736 0058 09AB     		add	r3, sp, #36
 737 005a 1A71     		strb	r2, [r3, #4]
 187:Src/main.c    ****     uint8_t seven[] = "140\n";
 738              		.loc 1 187 5 is_stmt 1 view .LVU156
 187:Src/main.c    ****     uint8_t seven[] = "140\n";
 739              		.loc 1 187 13 is_stmt 0 view .LVU157
 740 005c 364B     		ldr	r3, .L53+36
 741 005e 1A68     		ldr	r2, [r3]
 742 0060 0792     		str	r2, [sp, #28]
 743 0062 1A79     		ldrb	r2, [r3, #4]
 744 0064 07AB     		add	r3, sp, #28
 745 0066 1A71     		strb	r2, [r3, #4]
 188:Src/main.c    ****     uint8_t eight[] = "160\n";
 746              		.loc 1 188 5 is_stmt 1 view .LVU158
 188:Src/main.c    ****     uint8_t eight[] = "160\n";
 747              		.loc 1 188 13 is_stmt 0 view .LVU159
 748 0068 344B     		ldr	r3, .L53+40
 749 006a 1A68     		ldr	r2, [r3]
 750 006c 0592     		str	r2, [sp, #20]
 751 006e 1A79     		ldrb	r2, [r3, #4]
 752 0070 05AB     		add	r3, sp, #20
 753 0072 1A71     		strb	r2, [r3, #4]
 189:Src/main.c    ****     uint8_t nine[] = "180\n";
 754              		.loc 1 189 5 is_stmt 1 view .LVU160
 189:Src/main.c    ****     uint8_t nine[] = "180\n";
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 25


 755              		.loc 1 189 13 is_stmt 0 view .LVU161
 756 0074 324B     		ldr	r3, .L53+44
 757 0076 1A68     		ldr	r2, [r3]
 758 0078 0392     		str	r2, [sp, #12]
 759 007a 1A79     		ldrb	r2, [r3, #4]
 760 007c 03AB     		add	r3, sp, #12
 761 007e 1A71     		strb	r2, [r3, #4]
 190:Src/main.c    **** 
 762              		.loc 1 190 5 is_stmt 1 view .LVU162
 190:Src/main.c    **** 
 763              		.loc 1 190 13 is_stmt 0 view .LVU163
 764 0080 304B     		ldr	r3, .L53+48
 765 0082 1A68     		ldr	r2, [r3]
 766 0084 0192     		str	r2, [sp, #4]
 767 0086 1A79     		ldrb	r2, [r3, #4]
 768 0088 01AB     		add	r3, sp, #4
 769 008a 1A71     		strb	r2, [r3, #4]
 192:Src/main.c    ****         USART_SendString(err);
 770              		.loc 1 192 5 is_stmt 1 view .LVU164
 192:Src/main.c    ****         USART_SendString(err);
 771              		.loc 1 192 7 is_stmt 0 view .LVU165
 772 008c 7728     		cmp	r0, #119
 773 008e 0BD0     		beq	.L48
 192:Src/main.c    ****         USART_SendString(err);
 774              		.loc 1 192 25 discriminator 1 view .LVU166
 775 0090 6128     		cmp	r0, #97
 776 0092 12D0     		beq	.L49
 192:Src/main.c    ****         USART_SendString(err);
 777              		.loc 1 192 45 discriminator 2 view .LVU167
 778 0094 6428     		cmp	r0, #100
 779 0096 01D1     		bne	.L52
 209:Src/main.c    ****             break;
 780              		.loc 1 209 19 view .LVU168
 781 0098 0FA8     		add	r0, sp, #60
 782              	.LVL24:
 209:Src/main.c    ****             break;
 783              		.loc 1 209 19 view .LVU169
 784 009a 06E0     		b	.L34
 785              	.LVL25:
 786              	.L52:
 193:Src/main.c    ****         ClearCommand();
 787              		.loc 1 193 9 is_stmt 1 view .LVU170
 788 009c 1BA8     		add	r0, sp, #108
 789              	.LVL26:
 193:Src/main.c    ****         ClearCommand();
 790              		.loc 1 193 9 is_stmt 0 view .LVU171
 791 009e FFF7FEFF 		bl	USART_SendString
 792              	.LVL27:
 194:Src/main.c    ****         return;
 793              		.loc 1 194 9 is_stmt 1 view .LVU172
 794 00a2 FFF7FEFF 		bl	ClearCommand
 795              	.LVL28:
 195:Src/main.c    ****     }
 796              		.loc 1 195 9 view .LVU173
 797 00a6 30E0     		b	.L33
 798              	.LVL29:
 799              	.L48:
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 26


 203:Src/main.c    ****             break;
 800              		.loc 1 203 19 is_stmt 0 view .LVU174
 801 00a8 17A8     		add	r0, sp, #92
 802              	.LVL30:
 803              	.L34:
 216:Src/main.c    ****         case '1':
 804              		.loc 1 216 5 is_stmt 1 view .LVU175
 805 00aa 3139     		subs	r1, r1, #49
 806              	.LVL31:
 216:Src/main.c    ****         case '1':
 807              		.loc 1 216 5 is_stmt 0 view .LVU176
 808 00ac CBB2     		uxtb	r3, r1
 809 00ae 082B     		cmp	r3, #8
 810 00b0 13D8     		bhi	.L36
 811 00b2 9900     		lsls	r1, r3, #2
 812 00b4 244B     		ldr	r3, .L53+52
 813 00b6 5B58     		ldr	r3, [r3, r1]
 814 00b8 9F46     		mov	pc, r3
 815              		.section	.rodata.ProcessCommand,"a",%progbits
 816              		.align	2
 817              	.L38:
 818 0000 E6000000 		.word	.L46
 819 0004 0E010000 		.word	.L51
 820 0008 BE000000 		.word	.L44
 821 000c C2000000 		.word	.L43
 822 0010 C6000000 		.word	.L42
 823 0014 CA000000 		.word	.L41
 824 0018 CE000000 		.word	.L40
 825 001c D2000000 		.word	.L39
 826 0020 D6000000 		.word	.L37
 827              		.section	.text.ProcessCommand
 828              	.LVL32:
 829              	.L49:
 206:Src/main.c    ****             break;
 830              		.loc 1 206 19 view .LVU177
 831 00ba 13A8     		add	r0, sp, #76
 832              	.LVL33:
 206:Src/main.c    ****             break;
 833              		.loc 1 206 19 view .LVU178
 834 00bc F5E7     		b	.L34
 835              	.LVL34:
 836              	.L44:
 225:Src/main.c    ****             break;
 837              		.loc 1 225 13 is_stmt 1 view .LVU179
 226:Src/main.c    ****         case '4':
 838              		.loc 1 226 13 view .LVU180
 225:Src/main.c    ****             break;
 839              		.loc 1 225 19 is_stmt 0 view .LVU181
 840 00be 0CAC     		add	r4, sp, #48
 841              	.LVL35:
 226:Src/main.c    ****         case '4':
 842              		.loc 1 226 13 view .LVU182
 843 00c0 12E0     		b	.L45
 844              	.LVL36:
 845              	.L43:
 228:Src/main.c    ****             break;
 846              		.loc 1 228 13 is_stmt 1 view .LVU183
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 27


 229:Src/main.c    ****         case '5':
 847              		.loc 1 229 13 view .LVU184
 228:Src/main.c    ****             break;
 848              		.loc 1 228 19 is_stmt 0 view .LVU185
 849 00c2 0BAC     		add	r4, sp, #44
 850              	.LVL37:
 229:Src/main.c    ****         case '5':
 851              		.loc 1 229 13 view .LVU186
 852 00c4 10E0     		b	.L45
 853              	.LVL38:
 854              	.L42:
 231:Src/main.c    ****             break;
 855              		.loc 1 231 13 is_stmt 1 view .LVU187
 232:Src/main.c    ****         case '6':
 856              		.loc 1 232 13 view .LVU188
 231:Src/main.c    ****             break;
 857              		.loc 1 231 19 is_stmt 0 view .LVU189
 858 00c6 09AC     		add	r4, sp, #36
 859              	.LVL39:
 232:Src/main.c    ****         case '6':
 860              		.loc 1 232 13 view .LVU190
 861 00c8 0EE0     		b	.L45
 862              	.LVL40:
 863              	.L41:
 234:Src/main.c    ****             break;
 864              		.loc 1 234 13 is_stmt 1 view .LVU191
 235:Src/main.c    ****         case '7':
 865              		.loc 1 235 13 view .LVU192
 234:Src/main.c    ****             break;
 866              		.loc 1 234 19 is_stmt 0 view .LVU193
 867 00ca 07AC     		add	r4, sp, #28
 868              	.LVL41:
 235:Src/main.c    ****         case '7':
 869              		.loc 1 235 13 view .LVU194
 870 00cc 0CE0     		b	.L45
 871              	.LVL42:
 872              	.L40:
 237:Src/main.c    ****             break;
 873              		.loc 1 237 13 is_stmt 1 view .LVU195
 238:Src/main.c    ****         case '8':
 874              		.loc 1 238 13 view .LVU196
 237:Src/main.c    ****             break;
 875              		.loc 1 237 19 is_stmt 0 view .LVU197
 876 00ce 05AC     		add	r4, sp, #20
 877              	.LVL43:
 238:Src/main.c    ****         case '8':
 878              		.loc 1 238 13 view .LVU198
 879 00d0 0AE0     		b	.L45
 880              	.LVL44:
 881              	.L39:
 240:Src/main.c    ****             break;
 882              		.loc 1 240 13 is_stmt 1 view .LVU199
 241:Src/main.c    ****         case '9':
 883              		.loc 1 241 13 view .LVU200
 240:Src/main.c    ****             break;
 884              		.loc 1 240 19 is_stmt 0 view .LVU201
 885 00d2 03AC     		add	r4, sp, #12
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 28


 886              	.LVL45:
 241:Src/main.c    ****         case '9':
 887              		.loc 1 241 13 view .LVU202
 888 00d4 08E0     		b	.L45
 889              	.LVL46:
 890              	.L37:
 243:Src/main.c    ****             break;
 891              		.loc 1 243 13 is_stmt 1 view .LVU203
 244:Src/main.c    ****         default:
 892              		.loc 1 244 13 view .LVU204
 243:Src/main.c    ****             break;
 893              		.loc 1 243 19 is_stmt 0 view .LVU205
 894 00d6 01AC     		add	r4, sp, #4
 895              	.LVL47:
 244:Src/main.c    ****         default:
 896              		.loc 1 244 13 view .LVU206
 897 00d8 06E0     		b	.L45
 898              	.LVL48:
 899              	.L36:
 246:Src/main.c    ****             ClearCommand();
 900              		.loc 1 246 13 is_stmt 1 view .LVU207
 901 00da 1BA8     		add	r0, sp, #108
 902              	.LVL49:
 246:Src/main.c    ****             ClearCommand();
 903              		.loc 1 246 13 is_stmt 0 view .LVU208
 904 00dc FFF7FEFF 		bl	USART_SendString
 905              	.LVL50:
 247:Src/main.c    ****             return;
 906              		.loc 1 247 13 is_stmt 1 view .LVU209
 907 00e0 FFF7FEFF 		bl	ClearCommand
 908              	.LVL51:
 248:Src/main.c    ****     }
 909              		.loc 1 248 13 view .LVU210
 910 00e4 11E0     		b	.L33
 911              	.LVL52:
 912              	.L46:
 216:Src/main.c    ****         case '1':
 913              		.loc 1 216 5 is_stmt 0 view .LVU211
 914 00e6 0EAC     		add	r4, sp, #56
 915              	.L45:
 916              	.LVL53:
 251:Src/main.c    ****     USART_SendString(part2);
 917              		.loc 1 251 5 is_stmt 1 view .LVU212
 918 00e8 FFF7FEFF 		bl	USART_SendString
 919              	.LVL54:
 252:Src/main.c    ****     
 920              		.loc 1 252 5 view .LVU213
 921 00ec 2000     		movs	r0, r4
 922 00ee FFF7FEFF 		bl	USART_SendString
 923              	.LVL55:
 254:Src/main.c    ****     HAL_Delay(1000);
 924              		.loc 1 254 5 view .LVU214
 254:Src/main.c    ****     HAL_Delay(1000);
 925              		.loc 1 254 16 is_stmt 0 view .LVU215
 926 00f2 8024     		movs	r4, #128
 927              	.LVL56:
 254:Src/main.c    ****     HAL_Delay(1000);
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 29


 928              		.loc 1 254 16 view .LVU216
 929 00f4 E405     		lsls	r4, r4, #23
 930 00f6 154B     		ldr	r3, .L53+56
 931 00f8 6363     		str	r3, [r4, #52]
 255:Src/main.c    ****     TIM2->CCR1 = 0;
 932              		.loc 1 255 5 is_stmt 1 view .LVU217
 933 00fa FA20     		movs	r0, #250
 934 00fc 8000     		lsls	r0, r0, #2
 935 00fe FFF7FEFF 		bl	HAL_Delay
 936              	.LVL57:
 256:Src/main.c    ****     
 937              		.loc 1 256 5 view .LVU218
 256:Src/main.c    ****     
 938              		.loc 1 256 16 is_stmt 0 view .LVU219
 939 0102 0023     		movs	r3, #0
 940 0104 6363     		str	r3, [r4, #52]
 258:Src/main.c    ****     
 941              		.loc 1 258 5 is_stmt 1 view .LVU220
 942 0106 FFF7FEFF 		bl	ClearCommand
 943              	.LVL58:
 944              	.L33:
 277:Src/main.c    **** 
 945              		.loc 1 277 1 is_stmt 0 view .LVU221
 946 010a 23B0     		add	sp, sp, #140
 947              		@ sp needed
 948 010c F0BD     		pop	{r4, r5, r6, r7, pc}
 949              	.LVL59:
 950              	.L51:
 222:Src/main.c    ****             break;
 951              		.loc 1 222 19 view .LVU222
 952 010e 0DAC     		add	r4, sp, #52
 953 0110 EAE7     		b	.L45
 954              	.L54:
 955 0112 C046     		.align	2
 956              	.L53:
 957 0114 00000000 		.word	.LC8
 958 0118 1C000000 		.word	.LC10
 959 011c 2C000000 		.word	.LC12
 960 0120 3C000000 		.word	.LC14
 961 0124 32300A00 		.word	667698
 962 0128 34300A00 		.word	667700
 963 012c 36300A00 		.word	667702
 964 0130 38300A00 		.word	667704
 965 0134 4C000000 		.word	.LC16
 966 0138 54000000 		.word	.LC18
 967 013c 5C000000 		.word	.LC20
 968 0140 64000000 		.word	.LC22
 969 0144 6C000000 		.word	.LC24
 970 0148 00000000 		.word	.L38
 971 014c FFFF0000 		.word	65535
 972              		.cfi_endproc
 973              	.LFE47:
 975              		.section	.text.Ultrasonic_Init,"ax",%progbits
 976              		.align	1
 977              		.global	Ultrasonic_Init
 978              		.syntax unified
 979              		.code	16
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 30


 980              		.thumb_func
 982              	Ultrasonic_Init:
 983              	.LVL60:
 984              	.LFB48:
 280:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 985              		.loc 1 280 1 is_stmt 1 view -0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 24
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 280:Src/main.c    ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 989              		.loc 1 280 1 is_stmt 0 view .LVU224
 990 0000 00B5     		push	{lr}
 991              	.LCFI14:
 992              		.cfi_def_cfa_offset 4
 993              		.cfi_offset 14, -4
 994 0002 87B0     		sub	sp, sp, #28
 995              	.LCFI15:
 996              		.cfi_def_cfa_offset 32
 281:Src/main.c    **** 
 997              		.loc 1 281 5 is_stmt 1 view .LVU225
 998              	.LBB12:
 281:Src/main.c    **** 
 999              		.loc 1 281 5 view .LVU226
 281:Src/main.c    **** 
 1000              		.loc 1 281 5 view .LVU227
 1001 0004 0C4B     		ldr	r3, .L56
 1002 0006 5A69     		ldr	r2, [r3, #20]
 1003 0008 8021     		movs	r1, #128
 1004 000a 8902     		lsls	r1, r1, #10
 1005 000c 0A43     		orrs	r2, r1
 1006 000e 5A61     		str	r2, [r3, #20]
 281:Src/main.c    **** 
 1007              		.loc 1 281 5 view .LVU228
 1008 0010 5B69     		ldr	r3, [r3, #20]
 1009 0012 0B40     		ands	r3, r1
 1010 0014 0093     		str	r3, [sp]
 281:Src/main.c    **** 
 1011              		.loc 1 281 5 view .LVU229
 1012 0016 009B     		ldr	r3, [sp]
 1013              	.LBE12:
 281:Src/main.c    **** 
 1014              		.loc 1 281 5 view .LVU230
 283:Src/main.c    ****         GPIO_MODE_INPUT,
 1015              		.loc 1 283 5 view .LVU231
 283:Src/main.c    ****         GPIO_MODE_INPUT,
 1016              		.loc 1 283 22 is_stmt 0 view .LVU232
 1017 0018 1422     		movs	r2, #20
 1018 001a 0021     		movs	r1, #0
 1019 001c 01A8     		add	r0, sp, #4
 1020              	.LVL61:
 283:Src/main.c    ****         GPIO_MODE_INPUT,
 1021              		.loc 1 283 22 view .LVU233
 1022 001e FFF7FEFF 		bl	memset
 1023              	.LVL62:
 1024 0022 C023     		movs	r3, #192
 1025 0024 9B00     		lsls	r3, r3, #2
 1026 0026 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 31


 288:Src/main.c    **** }
 1027              		.loc 1 288 5 is_stmt 1 view .LVU234
 1028 0028 9020     		movs	r0, #144
 1029 002a 01A9     		add	r1, sp, #4
 1030 002c C005     		lsls	r0, r0, #23
 1031 002e FFF7FEFF 		bl	HAL_GPIO_Init
 1032              	.LVL63:
 289:Src/main.c    **** 
 1033              		.loc 1 289 1 is_stmt 0 view .LVU235
 1034 0032 07B0     		add	sp, sp, #28
 1035              		@ sp needed
 1036 0034 00BD     		pop	{pc}
 1037              	.L57:
 1038 0036 C046     		.align	2
 1039              	.L56:
 1040 0038 00100240 		.word	1073876992
 1041              		.cfi_endproc
 1042              	.LFE48:
 1044              		.section	.text.GetDistance,"ax",%progbits
 1045              		.align	1
 1046              		.global	GetDistance
 1047              		.syntax unified
 1048              		.code	16
 1049              		.thumb_func
 1051              	GetDistance:
 1052              	.LFB49:
 292:Src/main.c    ****     
 1053              		.loc 1 292 1 is_stmt 1 view -0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 0
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057              		@ link register save eliminated.
 294:Src/main.c    **** 
 1058              		.loc 1 294 1 view .LVU237
 1059              		@ sp needed
 1060 0000 7047     		bx	lr
 1061              		.cfi_endproc
 1062              	.LFE49:
 1064              		.section	.text.Error_Handler,"ax",%progbits
 1065              		.align	1
 1066              		.global	Error_Handler
 1067              		.syntax unified
 1068              		.code	16
 1069              		.thumb_func
 1071              	Error_Handler:
 1072              	.LFB54:
 473:Src/main.c    **** 
 474:Src/main.c    **** /* USER CODE BEGIN 4 */
 475:Src/main.c    **** 
 476:Src/main.c    **** /* USER CODE END 4 */
 477:Src/main.c    **** 
 478:Src/main.c    **** /**
 479:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 480:Src/main.c    ****   * @retval None
 481:Src/main.c    ****   */
 482:Src/main.c    **** void Error_Handler(void)
 483:Src/main.c    **** {
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 32


 1073              		.loc 1 483 1 view -0
 1074              		.cfi_startproc
 1075              		@ Volatile: function does not return.
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 484:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 485:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 486:Src/main.c    ****   __disable_irq();
 1079              		.loc 1 486 3 view .LVU239
 1080              	.LBB13:
 1081              	.LBI13:
 1082              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 33


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 34


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1083              		.loc 2 140 27 view .LVU240
 1084              	.LBB14:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1085              		.loc 2 142 3 view .LVU241
 1086              		.syntax divided
 1087              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1088 0000 72B6     		cpsid i
 1089              	@ 0 "" 2
 1090              		.thumb
 1091              		.syntax unified
 1092              	.L60:
 1093              	.LBE14:
 1094              	.LBE13:
 487:Src/main.c    ****   while (1)
 1095              		.loc 1 487 3 discriminator 1 view .LVU242
 488:Src/main.c    ****   {
 489:Src/main.c    ****   }
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 35


 1096              		.loc 1 489 3 discriminator 1 view .LVU243
 487:Src/main.c    ****   while (1)
 1097              		.loc 1 487 9 discriminator 1 view .LVU244
 1098 0002 FEE7     		b	.L60
 1099              		.cfi_endproc
 1100              	.LFE54:
 1102              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1103              		.align	1
 1104              		.syntax unified
 1105              		.code	16
 1106              		.thumb_func
 1108              	MX_TIM2_Init:
 1109              	.LFB52:
 392:Src/main.c    **** 
 1110              		.loc 1 392 1 view -0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 56
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114 0000 00B5     		push	{lr}
 1115              	.LCFI16:
 1116              		.cfi_def_cfa_offset 4
 1117              		.cfi_offset 14, -4
 1118 0002 8FB0     		sub	sp, sp, #60
 1119              	.LCFI17:
 1120              		.cfi_def_cfa_offset 64
 398:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1121              		.loc 1 398 3 view .LVU246
 398:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1122              		.loc 1 398 26 is_stmt 0 view .LVU247
 1123 0004 1022     		movs	r2, #16
 1124 0006 0021     		movs	r1, #0
 1125 0008 0AA8     		add	r0, sp, #40
 1126 000a FFF7FEFF 		bl	memset
 1127              	.LVL64:
 399:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1128              		.loc 1 399 3 is_stmt 1 view .LVU248
 399:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1129              		.loc 1 399 27 is_stmt 0 view .LVU249
 1130 000e 0822     		movs	r2, #8
 1131 0010 0021     		movs	r1, #0
 1132 0012 08A8     		add	r0, sp, #32
 1133 0014 FFF7FEFF 		bl	memset
 1134              	.LVL65:
 400:Src/main.c    **** 
 1135              		.loc 1 400 3 is_stmt 1 view .LVU250
 400:Src/main.c    **** 
 1136              		.loc 1 400 22 is_stmt 0 view .LVU251
 1137 0018 1C22     		movs	r2, #28
 1138 001a 0021     		movs	r1, #0
 1139 001c 01A8     		add	r0, sp, #4
 1140 001e FFF7FEFF 		bl	memset
 1141              	.LVL66:
 405:Src/main.c    ****   htim2.Init.Prescaler = 0;
 1142              		.loc 1 405 3 is_stmt 1 view .LVU252
 405:Src/main.c    ****   htim2.Init.Prescaler = 0;
 1143              		.loc 1 405 18 is_stmt 0 view .LVU253
 1144 0022 2148     		ldr	r0, .L72
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 36


 1145 0024 8023     		movs	r3, #128
 1146 0026 DB05     		lsls	r3, r3, #23
 1147 0028 0360     		str	r3, [r0]
 406:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1148              		.loc 1 406 3 is_stmt 1 view .LVU254
 406:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1149              		.loc 1 406 24 is_stmt 0 view .LVU255
 1150 002a 0023     		movs	r3, #0
 1151 002c 4360     		str	r3, [r0, #4]
 407:Src/main.c    ****   htim2.Init.Period = 65535;
 1152              		.loc 1 407 3 is_stmt 1 view .LVU256
 407:Src/main.c    ****   htim2.Init.Period = 65535;
 1153              		.loc 1 407 26 is_stmt 0 view .LVU257
 1154 002e 8360     		str	r3, [r0, #8]
 408:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1155              		.loc 1 408 3 is_stmt 1 view .LVU258
 408:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1156              		.loc 1 408 21 is_stmt 0 view .LVU259
 1157 0030 1E4A     		ldr	r2, .L72+4
 1158 0032 C260     		str	r2, [r0, #12]
 409:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1159              		.loc 1 409 3 is_stmt 1 view .LVU260
 409:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1160              		.loc 1 409 28 is_stmt 0 view .LVU261
 1161 0034 0361     		str	r3, [r0, #16]
 410:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1162              		.loc 1 410 3 is_stmt 1 view .LVU262
 410:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1163              		.loc 1 410 32 is_stmt 0 view .LVU263
 1164 0036 8033     		adds	r3, r3, #128
 1165 0038 8361     		str	r3, [r0, #24]
 411:Src/main.c    ****   {
 1166              		.loc 1 411 3 is_stmt 1 view .LVU264
 411:Src/main.c    ****   {
 1167              		.loc 1 411 7 is_stmt 0 view .LVU265
 1168 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1169              	.LVL67:
 411:Src/main.c    ****   {
 1170              		.loc 1 411 6 view .LVU266
 1171 003e 0028     		cmp	r0, #0
 1172 0040 28D1     		bne	.L67
 415:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1173              		.loc 1 415 3 is_stmt 1 view .LVU267
 415:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1174              		.loc 1 415 34 is_stmt 0 view .LVU268
 1175 0042 8023     		movs	r3, #128
 1176 0044 5B01     		lsls	r3, r3, #5
 1177 0046 0A93     		str	r3, [sp, #40]
 416:Src/main.c    ****   {
 1178              		.loc 1 416 3 is_stmt 1 view .LVU269
 416:Src/main.c    ****   {
 1179              		.loc 1 416 7 is_stmt 0 view .LVU270
 1180 0048 1748     		ldr	r0, .L72
 1181 004a 0AA9     		add	r1, sp, #40
 1182 004c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1183              	.LVL68:
 416:Src/main.c    ****   {
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 37


 1184              		.loc 1 416 6 view .LVU271
 1185 0050 0028     		cmp	r0, #0
 1186 0052 21D1     		bne	.L68
 420:Src/main.c    ****   {
 1187              		.loc 1 420 3 is_stmt 1 view .LVU272
 420:Src/main.c    ****   {
 1188              		.loc 1 420 7 is_stmt 0 view .LVU273
 1189 0054 1448     		ldr	r0, .L72
 1190 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1191              	.LVL69:
 420:Src/main.c    ****   {
 1192              		.loc 1 420 6 view .LVU274
 1193 005a 0028     		cmp	r0, #0
 1194 005c 1ED1     		bne	.L69
 424:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1195              		.loc 1 424 3 is_stmt 1 view .LVU275
 424:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1196              		.loc 1 424 37 is_stmt 0 view .LVU276
 1197 005e 0023     		movs	r3, #0
 1198 0060 0893     		str	r3, [sp, #32]
 425:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1199              		.loc 1 425 3 is_stmt 1 view .LVU277
 425:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1200              		.loc 1 425 33 is_stmt 0 view .LVU278
 1201 0062 0993     		str	r3, [sp, #36]
 426:Src/main.c    ****   {
 1202              		.loc 1 426 3 is_stmt 1 view .LVU279
 426:Src/main.c    ****   {
 1203              		.loc 1 426 7 is_stmt 0 view .LVU280
 1204 0064 1048     		ldr	r0, .L72
 1205 0066 08A9     		add	r1, sp, #32
 1206 0068 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1207              	.LVL70:
 426:Src/main.c    ****   {
 1208              		.loc 1 426 6 view .LVU281
 1209 006c 0028     		cmp	r0, #0
 1210 006e 17D1     		bne	.L70
 430:Src/main.c    ****   sConfigOC.Pulse = 0;
 1211              		.loc 1 430 3 is_stmt 1 view .LVU282
 430:Src/main.c    ****   sConfigOC.Pulse = 0;
 1212              		.loc 1 430 20 is_stmt 0 view .LVU283
 1213 0070 6023     		movs	r3, #96
 1214 0072 0193     		str	r3, [sp, #4]
 431:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1215              		.loc 1 431 3 is_stmt 1 view .LVU284
 431:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1216              		.loc 1 431 19 is_stmt 0 view .LVU285
 1217 0074 0023     		movs	r3, #0
 1218 0076 0293     		str	r3, [sp, #8]
 432:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1219              		.loc 1 432 3 is_stmt 1 view .LVU286
 432:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1220              		.loc 1 432 24 is_stmt 0 view .LVU287
 1221 0078 0393     		str	r3, [sp, #12]
 433:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1222              		.loc 1 433 3 is_stmt 1 view .LVU288
 433:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 38


 1223              		.loc 1 433 24 is_stmt 0 view .LVU289
 1224 007a 0593     		str	r3, [sp, #20]
 434:Src/main.c    ****   {
 1225              		.loc 1 434 3 is_stmt 1 view .LVU290
 434:Src/main.c    ****   {
 1226              		.loc 1 434 7 is_stmt 0 view .LVU291
 1227 007c 0A48     		ldr	r0, .L72
 1228 007e 0022     		movs	r2, #0
 1229 0080 01A9     		add	r1, sp, #4
 1230 0082 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1231              	.LVL71:
 434:Src/main.c    ****   {
 1232              		.loc 1 434 6 view .LVU292
 1233 0086 0028     		cmp	r0, #0
 1234 0088 0CD1     		bne	.L71
 441:Src/main.c    **** 
 1235              		.loc 1 441 3 is_stmt 1 view .LVU293
 1236 008a 0748     		ldr	r0, .L72
 1237 008c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1238              	.LVL72:
 443:Src/main.c    **** 
 1239              		.loc 1 443 1 is_stmt 0 view .LVU294
 1240 0090 0FB0     		add	sp, sp, #60
 1241              		@ sp needed
 1242 0092 00BD     		pop	{pc}
 1243              	.L67:
 413:Src/main.c    ****   }
 1244              		.loc 1 413 5 is_stmt 1 view .LVU295
 1245 0094 FFF7FEFF 		bl	Error_Handler
 1246              	.LVL73:
 1247              	.L68:
 418:Src/main.c    ****   }
 1248              		.loc 1 418 5 view .LVU296
 1249 0098 FFF7FEFF 		bl	Error_Handler
 1250              	.LVL74:
 1251              	.L69:
 422:Src/main.c    ****   }
 1252              		.loc 1 422 5 view .LVU297
 1253 009c FFF7FEFF 		bl	Error_Handler
 1254              	.LVL75:
 1255              	.L70:
 428:Src/main.c    ****   }
 1256              		.loc 1 428 5 view .LVU298
 1257 00a0 FFF7FEFF 		bl	Error_Handler
 1258              	.LVL76:
 1259              	.L71:
 436:Src/main.c    ****   }
 1260              		.loc 1 436 5 view .LVU299
 1261 00a4 FFF7FEFF 		bl	Error_Handler
 1262              	.LVL77:
 1263              	.L73:
 1264              		.align	2
 1265              	.L72:
 1266 00a8 00000000 		.word	htim2
 1267 00ac FFFF0000 		.word	65535
 1268              		.cfi_endproc
 1269              	.LFE52:
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 39


 1271              		.section	.text.SystemClock_Config,"ax",%progbits
 1272              		.align	1
 1273              		.global	SystemClock_Config
 1274              		.syntax unified
 1275              		.code	16
 1276              		.thumb_func
 1278              	SystemClock_Config:
 1279              	.LFB51:
 356:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1280              		.loc 1 356 1 view -0
 1281              		.cfi_startproc
 1282              		@ args = 0, pretend = 0, frame = 72
 1283              		@ frame_needed = 0, uses_anonymous_args = 0
 1284 0000 00B5     		push	{lr}
 1285              	.LCFI18:
 1286              		.cfi_def_cfa_offset 4
 1287              		.cfi_offset 14, -4
 1288 0002 93B0     		sub	sp, sp, #76
 1289              	.LCFI19:
 1290              		.cfi_def_cfa_offset 80
 357:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1291              		.loc 1 357 3 view .LVU301
 357:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1292              		.loc 1 357 22 is_stmt 0 view .LVU302
 1293 0004 3422     		movs	r2, #52
 1294 0006 0021     		movs	r1, #0
 1295 0008 05A8     		add	r0, sp, #20
 1296 000a FFF7FEFF 		bl	memset
 1297              	.LVL78:
 358:Src/main.c    **** 
 1298              		.loc 1 358 3 is_stmt 1 view .LVU303
 358:Src/main.c    **** 
 1299              		.loc 1 358 22 is_stmt 0 view .LVU304
 1300 000e 1022     		movs	r2, #16
 1301 0010 0021     		movs	r1, #0
 1302 0012 01A8     		add	r0, sp, #4
 1303 0014 FFF7FEFF 		bl	memset
 1304              	.LVL79:
 363:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1305              		.loc 1 363 3 is_stmt 1 view .LVU305
 363:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1306              		.loc 1 363 36 is_stmt 0 view .LVU306
 1307 0018 0223     		movs	r3, #2
 1308 001a 0593     		str	r3, [sp, #20]
 364:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1309              		.loc 1 364 3 is_stmt 1 view .LVU307
 364:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1310              		.loc 1 364 30 is_stmt 0 view .LVU308
 1311 001c 013B     		subs	r3, r3, #1
 1312 001e 0893     		str	r3, [sp, #32]
 365:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1313              		.loc 1 365 3 is_stmt 1 view .LVU309
 365:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1314              		.loc 1 365 41 is_stmt 0 view .LVU310
 1315 0020 0F33     		adds	r3, r3, #15
 1316 0022 0993     		str	r3, [sp, #36]
 366:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 40


 1317              		.loc 1 366 3 is_stmt 1 view .LVU311
 367:Src/main.c    ****   {
 1318              		.loc 1 367 3 view .LVU312
 367:Src/main.c    ****   {
 1319              		.loc 1 367 7 is_stmt 0 view .LVU313
 1320 0024 05A8     		add	r0, sp, #20
 1321 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1322              	.LVL80:
 367:Src/main.c    ****   {
 1323              		.loc 1 367 6 view .LVU314
 1324 002a 0028     		cmp	r0, #0
 1325 002c 0DD1     		bne	.L77
 374:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 1326              		.loc 1 374 3 is_stmt 1 view .LVU315
 374:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 1327              		.loc 1 374 31 is_stmt 0 view .LVU316
 1328 002e 0723     		movs	r3, #7
 1329 0030 0193     		str	r3, [sp, #4]
 376:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1330              		.loc 1 376 3 is_stmt 1 view .LVU317
 376:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1331              		.loc 1 376 34 is_stmt 0 view .LVU318
 1332 0032 0023     		movs	r3, #0
 1333 0034 0293     		str	r3, [sp, #8]
 377:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1334              		.loc 1 377 3 is_stmt 1 view .LVU319
 377:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1335              		.loc 1 377 35 is_stmt 0 view .LVU320
 1336 0036 0393     		str	r3, [sp, #12]
 378:Src/main.c    **** 
 1337              		.loc 1 378 3 is_stmt 1 view .LVU321
 378:Src/main.c    **** 
 1338              		.loc 1 378 36 is_stmt 0 view .LVU322
 1339 0038 0493     		str	r3, [sp, #16]
 380:Src/main.c    ****   {
 1340              		.loc 1 380 3 is_stmt 1 view .LVU323
 380:Src/main.c    ****   {
 1341              		.loc 1 380 7 is_stmt 0 view .LVU324
 1342 003a 0021     		movs	r1, #0
 1343 003c 01A8     		add	r0, sp, #4
 1344 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1345              	.LVL81:
 380:Src/main.c    ****   {
 1346              		.loc 1 380 6 view .LVU325
 1347 0042 0028     		cmp	r0, #0
 1348 0044 03D1     		bne	.L78
 384:Src/main.c    **** 
 1349              		.loc 1 384 1 view .LVU326
 1350 0046 13B0     		add	sp, sp, #76
 1351              		@ sp needed
 1352 0048 00BD     		pop	{pc}
 1353              	.L77:
 369:Src/main.c    ****   }
 1354              		.loc 1 369 5 is_stmt 1 view .LVU327
 1355 004a FFF7FEFF 		bl	Error_Handler
 1356              	.LVL82:
 1357              	.L78:
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 41


 382:Src/main.c    ****   }
 1358              		.loc 1 382 5 view .LVU328
 1359 004e FFF7FEFF 		bl	Error_Handler
 1360              	.LVL83:
 1361              		.cfi_endproc
 1362              	.LFE51:
 1364              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1365              		.align	2
 1366              	.LC30:
 1367 0000 556C7472 		.ascii	"Ultrasonic Distance: \000"
 1367      61736F6E 
 1367      69632044 
 1367      69737461 
 1367      6E63653A 
 1368              		.section	.text.main,"ax",%progbits
 1369              		.align	1
 1370              		.global	main
 1371              		.syntax unified
 1372              		.code	16
 1373              		.thumb_func
 1375              	main:
 1376              	.LFB50:
 303:Src/main.c    ****     
 1377              		.loc 1 303 1 view -0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 8
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381 0000 10B5     		push	{r4, lr}
 1382              	.LCFI20:
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 4, -8
 1385              		.cfi_offset 14, -4
 1386 0002 82B0     		sub	sp, sp, #8
 1387              	.LCFI21:
 1388              		.cfi_def_cfa_offset 16
 306:Src/main.c    ****     SystemClock_Config();
 1389              		.loc 1 306 5 view .LVU330
 1390 0004 FFF7FEFF 		bl	HAL_Init
 1391              	.LVL84:
 307:Src/main.c    ****     
 1392              		.loc 1 307 5 view .LVU331
 1393 0008 FFF7FEFF 		bl	SystemClock_Config
 1394              	.LVL85:
 310:Src/main.c    ****     USART_Init();
 1395              		.loc 1 310 5 view .LVU332
 1396 000c FFF7FEFF 		bl	GPIO_AF_Init
 1397              	.LVL86:
 311:Src/main.c    ****     LED_Init(LED_RED | LED_ORANGE | LED_GREEN | LED_BLUE);
 1398              		.loc 1 311 5 view .LVU333
 1399 0010 FFF7FEFF 		bl	USART_Init
 1400              	.LVL87:
 312:Src/main.c    **** 
 1401              		.loc 1 312 5 view .LVU334
 1402 0014 F020     		movs	r0, #240
 1403 0016 8000     		lsls	r0, r0, #2
 1404 0018 FFF7FEFF 		bl	LED_Init
 1405              	.LVL88:
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 42


 314:Src/main.c    ****     NVIC_SetPriority(USART3_4_IRQn,1);
 1406              		.loc 1 314 5 view .LVU335
 1407              	.LBB15:
 1408              	.LBI15:
 1409              		.file 3 "Drivers/CMSIS/Include/core_cm0.h"
   1:Drivers/CMSIS/Include/core_cm0.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0.h ****  * @file     core_cm0.h
   3:Drivers/CMSIS/Include/core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0.h ****  * @version  V5.0.5
   5:Drivers/CMSIS/Include/core_cm0.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0.h **** /*
   8:Drivers/CMSIS/Include/core_cm0.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0.h ****  *
  10:Drivers/CMSIS/Include/core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0.h ****  *
  12:Drivers/CMSIS/Include/core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0.h ****  *
  16:Drivers/CMSIS/Include/core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0.h ****  *
  18:Drivers/CMSIS/Include/core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0.h ****  */
  24:Drivers/CMSIS/Include/core_cm0.h **** 
  25:Drivers/CMSIS/Include/core_cm0.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0.h **** 
  31:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0.h **** 
  34:Drivers/CMSIS/Include/core_cm0.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0.h **** 
  36:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0.h **** 
  40:Drivers/CMSIS/Include/core_cm0.h **** /**
  41:Drivers/CMSIS/Include/core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0.h **** 
  44:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0.h **** 
  47:Drivers/CMSIS/Include/core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0.h **** 
  50:Drivers/CMSIS/Include/core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0.h ****  */
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 43


  53:Drivers/CMSIS/Include/core_cm0.h **** 
  54:Drivers/CMSIS/Include/core_cm0.h **** 
  55:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0.h **** /**
  59:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup Cortex_M0
  60:Drivers/CMSIS/Include/core_cm0.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0.h ****  */
  62:Drivers/CMSIS/Include/core_cm0.h **** 
  63:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0.h ****  
  65:Drivers/CMSIS/Include/core_cm0.h **** /*  CMSIS CM0 definitions */
  66:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm0.h **** 
  71:Drivers/CMSIS/Include/core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm0.h **** 
  73:Drivers/CMSIS/Include/core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0.h **** */
  76:Drivers/CMSIS/Include/core_cm0.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0.h **** 
  78:Drivers/CMSIS/Include/core_cm0.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0.h **** 
  83:Drivers/CMSIS/Include/core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0.h **** 
  88:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0.h **** 
  93:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0.h **** 
  98:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0.h **** 
 103:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0.h **** 
 108:Drivers/CMSIS/Include/core_cm0.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0.h ****   #if ( __CSMC__ & 0x400U)
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 44


 110:Drivers/CMSIS/Include/core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0.h **** 
 113:Drivers/CMSIS/Include/core_cm0.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0.h **** 
 115:Drivers/CMSIS/Include/core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0.h **** 
 117:Drivers/CMSIS/Include/core_cm0.h **** 
 118:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0.h **** }
 120:Drivers/CMSIS/Include/core_cm0.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0.h **** 
 122:Drivers/CMSIS/Include/core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0.h **** 
 124:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0.h **** 
 126:Drivers/CMSIS/Include/core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0.h **** 
 129:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0.h **** 
 133:Drivers/CMSIS/Include/core_cm0.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __CM0_REV
 136:Drivers/CMSIS/Include/core_cm0.h ****     #define __CM0_REV               0x0000U
 137:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0.h **** 
 140:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 141:Drivers/CMSIS/Include/core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 142:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0.h **** 
 145:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 146:Drivers/CMSIS/Include/core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 147:Drivers/CMSIS/Include/core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0.h **** #endif
 150:Drivers/CMSIS/Include/core_cm0.h **** 
 151:Drivers/CMSIS/Include/core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 152:Drivers/CMSIS/Include/core_cm0.h **** /**
 153:Drivers/CMSIS/Include/core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 154:Drivers/CMSIS/Include/core_cm0.h **** 
 155:Drivers/CMSIS/Include/core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 156:Drivers/CMSIS/Include/core_cm0.h ****     \li to specify the access to peripheral variables.
 157:Drivers/CMSIS/Include/core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 158:Drivers/CMSIS/Include/core_cm0.h **** */
 159:Drivers/CMSIS/Include/core_cm0.h **** #ifdef __cplusplus
 160:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 161:Drivers/CMSIS/Include/core_cm0.h **** #else
 162:Drivers/CMSIS/Include/core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 163:Drivers/CMSIS/Include/core_cm0.h **** #endif
 164:Drivers/CMSIS/Include/core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 165:Drivers/CMSIS/Include/core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 166:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 45


 167:Drivers/CMSIS/Include/core_cm0.h **** /* following defines should be used for structure members */
 168:Drivers/CMSIS/Include/core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 169:Drivers/CMSIS/Include/core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 170:Drivers/CMSIS/Include/core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 171:Drivers/CMSIS/Include/core_cm0.h **** 
 172:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group Cortex_M0 */
 173:Drivers/CMSIS/Include/core_cm0.h **** 
 174:Drivers/CMSIS/Include/core_cm0.h **** 
 175:Drivers/CMSIS/Include/core_cm0.h **** 
 176:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 177:Drivers/CMSIS/Include/core_cm0.h ****  *                 Register Abstraction
 178:Drivers/CMSIS/Include/core_cm0.h ****   Core Register contain:
 179:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register
 180:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Register
 181:Drivers/CMSIS/Include/core_cm0.h ****   - Core SCB Register
 182:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Register
 183:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 184:Drivers/CMSIS/Include/core_cm0.h **** /**
 185:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 186:Drivers/CMSIS/Include/core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 187:Drivers/CMSIS/Include/core_cm0.h **** */
 188:Drivers/CMSIS/Include/core_cm0.h **** 
 189:Drivers/CMSIS/Include/core_cm0.h **** /**
 190:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 191:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 192:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Core Register type definitions.
 193:Drivers/CMSIS/Include/core_cm0.h ****   @{
 194:Drivers/CMSIS/Include/core_cm0.h ****  */
 195:Drivers/CMSIS/Include/core_cm0.h **** 
 196:Drivers/CMSIS/Include/core_cm0.h **** /**
 197:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 198:Drivers/CMSIS/Include/core_cm0.h ****  */
 199:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 200:Drivers/CMSIS/Include/core_cm0.h **** {
 201:Drivers/CMSIS/Include/core_cm0.h ****   struct
 202:Drivers/CMSIS/Include/core_cm0.h ****   {
 203:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 204:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 205:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 206:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 207:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 208:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 209:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 210:Drivers/CMSIS/Include/core_cm0.h **** } APSR_Type;
 211:Drivers/CMSIS/Include/core_cm0.h **** 
 212:Drivers/CMSIS/Include/core_cm0.h **** /* APSR Register Definitions */
 213:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 214:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 215:Drivers/CMSIS/Include/core_cm0.h **** 
 216:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 217:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 218:Drivers/CMSIS/Include/core_cm0.h **** 
 219:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 220:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 221:Drivers/CMSIS/Include/core_cm0.h **** 
 222:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 223:Drivers/CMSIS/Include/core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 46


 224:Drivers/CMSIS/Include/core_cm0.h **** 
 225:Drivers/CMSIS/Include/core_cm0.h **** 
 226:Drivers/CMSIS/Include/core_cm0.h **** /**
 227:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 228:Drivers/CMSIS/Include/core_cm0.h ****  */
 229:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 230:Drivers/CMSIS/Include/core_cm0.h **** {
 231:Drivers/CMSIS/Include/core_cm0.h ****   struct
 232:Drivers/CMSIS/Include/core_cm0.h ****   {
 233:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 234:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 235:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 236:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 237:Drivers/CMSIS/Include/core_cm0.h **** } IPSR_Type;
 238:Drivers/CMSIS/Include/core_cm0.h **** 
 239:Drivers/CMSIS/Include/core_cm0.h **** /* IPSR Register Definitions */
 240:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 241:Drivers/CMSIS/Include/core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 242:Drivers/CMSIS/Include/core_cm0.h **** 
 243:Drivers/CMSIS/Include/core_cm0.h **** 
 244:Drivers/CMSIS/Include/core_cm0.h **** /**
 245:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 246:Drivers/CMSIS/Include/core_cm0.h ****  */
 247:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 248:Drivers/CMSIS/Include/core_cm0.h **** {
 249:Drivers/CMSIS/Include/core_cm0.h ****   struct
 250:Drivers/CMSIS/Include/core_cm0.h ****   {
 251:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 252:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 253:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 254:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 255:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 256:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 257:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 258:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 259:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 260:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 261:Drivers/CMSIS/Include/core_cm0.h **** } xPSR_Type;
 262:Drivers/CMSIS/Include/core_cm0.h **** 
 263:Drivers/CMSIS/Include/core_cm0.h **** /* xPSR Register Definitions */
 264:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 265:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 266:Drivers/CMSIS/Include/core_cm0.h **** 
 267:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 268:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 269:Drivers/CMSIS/Include/core_cm0.h **** 
 270:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 271:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 272:Drivers/CMSIS/Include/core_cm0.h **** 
 273:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 274:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 275:Drivers/CMSIS/Include/core_cm0.h **** 
 276:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 278:Drivers/CMSIS/Include/core_cm0.h **** 
 279:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 47


 281:Drivers/CMSIS/Include/core_cm0.h **** 
 282:Drivers/CMSIS/Include/core_cm0.h **** 
 283:Drivers/CMSIS/Include/core_cm0.h **** /**
 284:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 285:Drivers/CMSIS/Include/core_cm0.h ****  */
 286:Drivers/CMSIS/Include/core_cm0.h **** typedef union
 287:Drivers/CMSIS/Include/core_cm0.h **** {
 288:Drivers/CMSIS/Include/core_cm0.h ****   struct
 289:Drivers/CMSIS/Include/core_cm0.h ****   {
 290:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 291:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 292:Drivers/CMSIS/Include/core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 293:Drivers/CMSIS/Include/core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 294:Drivers/CMSIS/Include/core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 295:Drivers/CMSIS/Include/core_cm0.h **** } CONTROL_Type;
 296:Drivers/CMSIS/Include/core_cm0.h **** 
 297:Drivers/CMSIS/Include/core_cm0.h **** /* CONTROL Register Definitions */
 298:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 299:Drivers/CMSIS/Include/core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 300:Drivers/CMSIS/Include/core_cm0.h **** 
 301:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CORE */
 302:Drivers/CMSIS/Include/core_cm0.h **** 
 303:Drivers/CMSIS/Include/core_cm0.h **** 
 304:Drivers/CMSIS/Include/core_cm0.h **** /**
 305:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 306:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 307:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 308:Drivers/CMSIS/Include/core_cm0.h ****   @{
 309:Drivers/CMSIS/Include/core_cm0.h ****  */
 310:Drivers/CMSIS/Include/core_cm0.h **** 
 311:Drivers/CMSIS/Include/core_cm0.h **** /**
 312:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 313:Drivers/CMSIS/Include/core_cm0.h ****  */
 314:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 315:Drivers/CMSIS/Include/core_cm0.h **** {
 316:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 317:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0[31U];
 318:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 319:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RSERVED1[31U];
 320:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 321:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED2[31U];
 322:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 323:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED3[31U];
 324:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED4[64U];
 325:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 326:Drivers/CMSIS/Include/core_cm0.h **** }  NVIC_Type;
 327:Drivers/CMSIS/Include/core_cm0.h **** 
 328:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_NVIC */
 329:Drivers/CMSIS/Include/core_cm0.h **** 
 330:Drivers/CMSIS/Include/core_cm0.h **** 
 331:Drivers/CMSIS/Include/core_cm0.h **** /**
 332:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 333:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 334:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 335:Drivers/CMSIS/Include/core_cm0.h ****   @{
 336:Drivers/CMSIS/Include/core_cm0.h ****  */
 337:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 48


 338:Drivers/CMSIS/Include/core_cm0.h **** /**
 339:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 340:Drivers/CMSIS/Include/core_cm0.h ****  */
 341:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 342:Drivers/CMSIS/Include/core_cm0.h **** {
 343:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 344:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 345:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED0;
 346:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 347:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 348:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 349:Drivers/CMSIS/Include/core_cm0.h ****         uint32_t RESERVED1;
 350:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 351:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 352:Drivers/CMSIS/Include/core_cm0.h **** } SCB_Type;
 353:Drivers/CMSIS/Include/core_cm0.h **** 
 354:Drivers/CMSIS/Include/core_cm0.h **** /* SCB CPUID Register Definitions */
 355:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 356:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 357:Drivers/CMSIS/Include/core_cm0.h **** 
 358:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 359:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 360:Drivers/CMSIS/Include/core_cm0.h **** 
 361:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 362:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 363:Drivers/CMSIS/Include/core_cm0.h **** 
 364:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 365:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 366:Drivers/CMSIS/Include/core_cm0.h **** 
 367:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 368:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 369:Drivers/CMSIS/Include/core_cm0.h **** 
 370:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 371:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 372:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 373:Drivers/CMSIS/Include/core_cm0.h **** 
 374:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 376:Drivers/CMSIS/Include/core_cm0.h **** 
 377:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 379:Drivers/CMSIS/Include/core_cm0.h **** 
 380:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 382:Drivers/CMSIS/Include/core_cm0.h **** 
 383:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 385:Drivers/CMSIS/Include/core_cm0.h **** 
 386:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 388:Drivers/CMSIS/Include/core_cm0.h **** 
 389:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0.h **** 
 392:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 49


 395:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0.h **** 
 398:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 399:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 401:Drivers/CMSIS/Include/core_cm0.h **** 
 402:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 404:Drivers/CMSIS/Include/core_cm0.h **** 
 405:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 407:Drivers/CMSIS/Include/core_cm0.h **** 
 408:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 410:Drivers/CMSIS/Include/core_cm0.h **** 
 411:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 413:Drivers/CMSIS/Include/core_cm0.h **** 
 414:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Control Register Definitions */
 415:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 416:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 417:Drivers/CMSIS/Include/core_cm0.h **** 
 418:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0.h **** 
 421:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 422:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 423:Drivers/CMSIS/Include/core_cm0.h **** 
 424:Drivers/CMSIS/Include/core_cm0.h **** /* SCB Configuration Control Register Definitions */
 425:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 426:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0.h **** 
 428:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 429:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0.h **** 
 431:Drivers/CMSIS/Include/core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 432:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0.h **** 
 435:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SCB */
 436:Drivers/CMSIS/Include/core_cm0.h **** 
 437:Drivers/CMSIS/Include/core_cm0.h **** 
 438:Drivers/CMSIS/Include/core_cm0.h **** /**
 439:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 440:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 441:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 442:Drivers/CMSIS/Include/core_cm0.h ****   @{
 443:Drivers/CMSIS/Include/core_cm0.h ****  */
 444:Drivers/CMSIS/Include/core_cm0.h **** 
 445:Drivers/CMSIS/Include/core_cm0.h **** /**
 446:Drivers/CMSIS/Include/core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 447:Drivers/CMSIS/Include/core_cm0.h ****  */
 448:Drivers/CMSIS/Include/core_cm0.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm0.h **** {
 450:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 451:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 50


 452:Drivers/CMSIS/Include/core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 453:Drivers/CMSIS/Include/core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 454:Drivers/CMSIS/Include/core_cm0.h **** } SysTick_Type;
 455:Drivers/CMSIS/Include/core_cm0.h **** 
 456:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Control / Status Register Definitions */
 457:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 458:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 459:Drivers/CMSIS/Include/core_cm0.h **** 
 460:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 461:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 462:Drivers/CMSIS/Include/core_cm0.h **** 
 463:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 464:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 465:Drivers/CMSIS/Include/core_cm0.h **** 
 466:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 467:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 468:Drivers/CMSIS/Include/core_cm0.h **** 
 469:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Reload Register Definitions */
 470:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 471:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 472:Drivers/CMSIS/Include/core_cm0.h **** 
 473:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Current Register Definitions */
 474:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 475:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 476:Drivers/CMSIS/Include/core_cm0.h **** 
 477:Drivers/CMSIS/Include/core_cm0.h **** /* SysTick Calibration Register Definitions */
 478:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 479:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 480:Drivers/CMSIS/Include/core_cm0.h **** 
 481:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0.h **** 
 484:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0.h **** 
 487:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_SysTick */
 488:Drivers/CMSIS/Include/core_cm0.h **** 
 489:Drivers/CMSIS/Include/core_cm0.h **** 
 490:Drivers/CMSIS/Include/core_cm0.h **** /**
 491:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_core_register
 492:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 493:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 494:Drivers/CMSIS/Include/core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 495:Drivers/CMSIS/Include/core_cm0.h ****   @{
 496:Drivers/CMSIS/Include/core_cm0.h ****  */
 497:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 498:Drivers/CMSIS/Include/core_cm0.h **** 
 499:Drivers/CMSIS/Include/core_cm0.h **** 
 500:Drivers/CMSIS/Include/core_cm0.h **** /**
 501:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 502:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 503:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 504:Drivers/CMSIS/Include/core_cm0.h ****   @{
 505:Drivers/CMSIS/Include/core_cm0.h ****  */
 506:Drivers/CMSIS/Include/core_cm0.h **** 
 507:Drivers/CMSIS/Include/core_cm0.h **** /**
 508:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 51


 509:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 510:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 511:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted value.
 512:Drivers/CMSIS/Include/core_cm0.h **** */
 513:Drivers/CMSIS/Include/core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 514:Drivers/CMSIS/Include/core_cm0.h **** 
 515:Drivers/CMSIS/Include/core_cm0.h **** /**
 516:Drivers/CMSIS/Include/core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 517:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] field  Name of the register bit field.
 518:Drivers/CMSIS/Include/core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 519:Drivers/CMSIS/Include/core_cm0.h ****   \return           Masked and shifted bit field value.
 520:Drivers/CMSIS/Include/core_cm0.h **** */
 521:Drivers/CMSIS/Include/core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 522:Drivers/CMSIS/Include/core_cm0.h **** 
 523:Drivers/CMSIS/Include/core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 524:Drivers/CMSIS/Include/core_cm0.h **** 
 525:Drivers/CMSIS/Include/core_cm0.h **** 
 526:Drivers/CMSIS/Include/core_cm0.h **** /**
 527:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup    CMSIS_core_register
 528:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 529:Drivers/CMSIS/Include/core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 530:Drivers/CMSIS/Include/core_cm0.h ****   @{
 531:Drivers/CMSIS/Include/core_cm0.h ****  */
 532:Drivers/CMSIS/Include/core_cm0.h **** 
 533:Drivers/CMSIS/Include/core_cm0.h **** /* Memory mapping of Core Hardware */
 534:Drivers/CMSIS/Include/core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 535:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 536:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 537:Drivers/CMSIS/Include/core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 538:Drivers/CMSIS/Include/core_cm0.h **** 
 539:Drivers/CMSIS/Include/core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 540:Drivers/CMSIS/Include/core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 541:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 542:Drivers/CMSIS/Include/core_cm0.h **** 
 543:Drivers/CMSIS/Include/core_cm0.h **** 
 544:Drivers/CMSIS/Include/core_cm0.h **** /*@} */
 545:Drivers/CMSIS/Include/core_cm0.h **** 
 546:Drivers/CMSIS/Include/core_cm0.h **** 
 547:Drivers/CMSIS/Include/core_cm0.h **** 
 548:Drivers/CMSIS/Include/core_cm0.h **** /*******************************************************************************
 549:Drivers/CMSIS/Include/core_cm0.h ****  *                Hardware Abstraction Layer
 550:Drivers/CMSIS/Include/core_cm0.h ****   Core Function Interface contains:
 551:Drivers/CMSIS/Include/core_cm0.h ****   - Core NVIC Functions
 552:Drivers/CMSIS/Include/core_cm0.h ****   - Core SysTick Functions
 553:Drivers/CMSIS/Include/core_cm0.h ****   - Core Register Access Functions
 554:Drivers/CMSIS/Include/core_cm0.h ****  ******************************************************************************/
 555:Drivers/CMSIS/Include/core_cm0.h **** /**
 556:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 557:Drivers/CMSIS/Include/core_cm0.h **** */
 558:Drivers/CMSIS/Include/core_cm0.h **** 
 559:Drivers/CMSIS/Include/core_cm0.h **** 
 560:Drivers/CMSIS/Include/core_cm0.h **** 
 561:Drivers/CMSIS/Include/core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 562:Drivers/CMSIS/Include/core_cm0.h **** /**
 563:Drivers/CMSIS/Include/core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 564:Drivers/CMSIS/Include/core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 565:Drivers/CMSIS/Include/core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 52


 566:Drivers/CMSIS/Include/core_cm0.h ****   @{
 567:Drivers/CMSIS/Include/core_cm0.h ****  */
 568:Drivers/CMSIS/Include/core_cm0.h **** 
 569:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_NVIC_VIRTUAL
 570:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 571:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 572:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 573:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 574:Drivers/CMSIS/Include/core_cm0.h **** #else
 575:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 576:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 577:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 578:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 579:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 580:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 581:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 582:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 583:Drivers/CMSIS/Include/core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 584:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 585:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 586:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 587:Drivers/CMSIS/Include/core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 588:Drivers/CMSIS/Include/core_cm0.h **** 
 589:Drivers/CMSIS/Include/core_cm0.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 590:Drivers/CMSIS/Include/core_cm0.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 591:Drivers/CMSIS/Include/core_cm0.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 592:Drivers/CMSIS/Include/core_cm0.h ****   #endif
 593:Drivers/CMSIS/Include/core_cm0.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 594:Drivers/CMSIS/Include/core_cm0.h **** #else
 595:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 596:Drivers/CMSIS/Include/core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 597:Drivers/CMSIS/Include/core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 598:Drivers/CMSIS/Include/core_cm0.h **** 
 599:Drivers/CMSIS/Include/core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 600:Drivers/CMSIS/Include/core_cm0.h **** 
 601:Drivers/CMSIS/Include/core_cm0.h **** 
 602:Drivers/CMSIS/Include/core_cm0.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 603:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 604:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 605:Drivers/CMSIS/Include/core_cm0.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 606:Drivers/CMSIS/Include/core_cm0.h **** 
 607:Drivers/CMSIS/Include/core_cm0.h **** 
 608:Drivers/CMSIS/Include/core_cm0.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 609:Drivers/CMSIS/Include/core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 610:Drivers/CMSIS/Include/core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 611:Drivers/CMSIS/Include/core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 612:Drivers/CMSIS/Include/core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 613:Drivers/CMSIS/Include/core_cm0.h **** 
 614:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 615:Drivers/CMSIS/Include/core_cm0.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 616:Drivers/CMSIS/Include/core_cm0.h **** 
 617:Drivers/CMSIS/Include/core_cm0.h **** /**
 618:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Enable Interrupt
 619:Drivers/CMSIS/Include/core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 620:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 621:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 622:Drivers/CMSIS/Include/core_cm0.h ****  */
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 53


 623:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 1410              		.loc 3 623 22 view .LVU336
 1411              	.LBB16:
 624:Drivers/CMSIS/Include/core_cm0.h **** {
 625:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 1412              		.loc 3 625 3 view .LVU337
 626:Drivers/CMSIS/Include/core_cm0.h ****   {
 627:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 1413              		.loc 3 627 5 view .LVU338
 1414              		.loc 3 627 20 is_stmt 0 view .LVU339
 1415 001c 1E4B     		ldr	r3, .L85
 1416 001e 8022     		movs	r2, #128
 1417 0020 9205     		lsls	r2, r2, #22
 1418 0022 1A60     		str	r2, [r3]
 1419              	.LVL89:
 1420              		.loc 3 627 20 view .LVU340
 1421              	.LBE16:
 1422              	.LBE15:
 315:Src/main.c    **** 
 1423              		.loc 1 315 5 is_stmt 1 view .LVU341
 1424              	.LBB17:
 1425              	.LBI17:
 628:Drivers/CMSIS/Include/core_cm0.h ****   }
 629:Drivers/CMSIS/Include/core_cm0.h **** }
 630:Drivers/CMSIS/Include/core_cm0.h **** 
 631:Drivers/CMSIS/Include/core_cm0.h **** 
 632:Drivers/CMSIS/Include/core_cm0.h **** /**
 633:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Interrupt Enable status
 634:Drivers/CMSIS/Include/core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 635:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 636:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt is not enabled.
 637:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt is enabled.
 638:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 639:Drivers/CMSIS/Include/core_cm0.h ****  */
 640:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 641:Drivers/CMSIS/Include/core_cm0.h **** {
 642:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 643:Drivers/CMSIS/Include/core_cm0.h ****   {
 644:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 645:Drivers/CMSIS/Include/core_cm0.h ****   }
 646:Drivers/CMSIS/Include/core_cm0.h ****   else
 647:Drivers/CMSIS/Include/core_cm0.h ****   {
 648:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 649:Drivers/CMSIS/Include/core_cm0.h ****   }
 650:Drivers/CMSIS/Include/core_cm0.h **** }
 651:Drivers/CMSIS/Include/core_cm0.h **** 
 652:Drivers/CMSIS/Include/core_cm0.h **** 
 653:Drivers/CMSIS/Include/core_cm0.h **** /**
 654:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Disable Interrupt
 655:Drivers/CMSIS/Include/core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 656:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 657:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 658:Drivers/CMSIS/Include/core_cm0.h ****  */
 659:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 660:Drivers/CMSIS/Include/core_cm0.h **** {
 661:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 662:Drivers/CMSIS/Include/core_cm0.h ****   {
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 54


 663:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 664:Drivers/CMSIS/Include/core_cm0.h ****     __DSB();
 665:Drivers/CMSIS/Include/core_cm0.h ****     __ISB();
 666:Drivers/CMSIS/Include/core_cm0.h ****   }
 667:Drivers/CMSIS/Include/core_cm0.h **** }
 668:Drivers/CMSIS/Include/core_cm0.h **** 
 669:Drivers/CMSIS/Include/core_cm0.h **** 
 670:Drivers/CMSIS/Include/core_cm0.h **** /**
 671:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Get Pending Interrupt
 672:Drivers/CMSIS/Include/core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 673:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 674:Drivers/CMSIS/Include/core_cm0.h ****   \return             0  Interrupt status is not pending.
 675:Drivers/CMSIS/Include/core_cm0.h ****   \return             1  Interrupt status is pending.
 676:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 677:Drivers/CMSIS/Include/core_cm0.h ****  */
 678:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 679:Drivers/CMSIS/Include/core_cm0.h **** {
 680:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 681:Drivers/CMSIS/Include/core_cm0.h ****   {
 682:Drivers/CMSIS/Include/core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 683:Drivers/CMSIS/Include/core_cm0.h ****   }
 684:Drivers/CMSIS/Include/core_cm0.h ****   else
 685:Drivers/CMSIS/Include/core_cm0.h ****   {
 686:Drivers/CMSIS/Include/core_cm0.h ****     return(0U);
 687:Drivers/CMSIS/Include/core_cm0.h ****   }
 688:Drivers/CMSIS/Include/core_cm0.h **** }
 689:Drivers/CMSIS/Include/core_cm0.h **** 
 690:Drivers/CMSIS/Include/core_cm0.h **** 
 691:Drivers/CMSIS/Include/core_cm0.h **** /**
 692:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Pending Interrupt
 693:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 694:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 695:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 696:Drivers/CMSIS/Include/core_cm0.h ****  */
 697:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 698:Drivers/CMSIS/Include/core_cm0.h **** {
 699:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 700:Drivers/CMSIS/Include/core_cm0.h ****   {
 701:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 702:Drivers/CMSIS/Include/core_cm0.h ****   }
 703:Drivers/CMSIS/Include/core_cm0.h **** }
 704:Drivers/CMSIS/Include/core_cm0.h **** 
 705:Drivers/CMSIS/Include/core_cm0.h **** 
 706:Drivers/CMSIS/Include/core_cm0.h **** /**
 707:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Clear Pending Interrupt
 708:Drivers/CMSIS/Include/core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 709:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 710:Drivers/CMSIS/Include/core_cm0.h ****   \note    IRQn must not be negative.
 711:Drivers/CMSIS/Include/core_cm0.h ****  */
 712:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 713:Drivers/CMSIS/Include/core_cm0.h **** {
 714:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 715:Drivers/CMSIS/Include/core_cm0.h ****   {
 716:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 717:Drivers/CMSIS/Include/core_cm0.h ****   }
 718:Drivers/CMSIS/Include/core_cm0.h **** }
 719:Drivers/CMSIS/Include/core_cm0.h **** 
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 55


 720:Drivers/CMSIS/Include/core_cm0.h **** 
 721:Drivers/CMSIS/Include/core_cm0.h **** /**
 722:Drivers/CMSIS/Include/core_cm0.h ****   \brief   Set Interrupt Priority
 723:Drivers/CMSIS/Include/core_cm0.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 724:Drivers/CMSIS/Include/core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 725:Drivers/CMSIS/Include/core_cm0.h ****            or negative to specify a processor exception.
 726:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 727:Drivers/CMSIS/Include/core_cm0.h ****   \param [in]  priority  Priority to set.
 728:Drivers/CMSIS/Include/core_cm0.h ****   \note    The priority cannot be set for every processor exception.
 729:Drivers/CMSIS/Include/core_cm0.h ****  */
 730:Drivers/CMSIS/Include/core_cm0.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 1426              		.loc 3 730 22 view .LVU342
 1427              	.LBB18:
 731:Drivers/CMSIS/Include/core_cm0.h **** {
 732:Drivers/CMSIS/Include/core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 1428              		.loc 3 732 3 view .LVU343
 733:Drivers/CMSIS/Include/core_cm0.h ****   {
 734:Drivers/CMSIS/Include/core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 1429              		.loc 3 734 5 view .LVU344
 1430              		.loc 3 734 52 is_stmt 0 view .LVU345
 1431 0024 C720     		movs	r0, #199
 1432 0026 8000     		lsls	r0, r0, #2
 1433 0028 1958     		ldr	r1, [r3, r0]
 1434              		.loc 3 734 33 view .LVU346
 1435 002a 1C4A     		ldr	r2, .L85+4
 1436 002c 1140     		ands	r1, r2
 1437              		.loc 3 734 102 view .LVU347
 1438 002e 8022     		movs	r2, #128
 1439 0030 D201     		lsls	r2, r2, #7
 1440 0032 0A43     		orrs	r2, r1
 1441              		.loc 3 734 30 view .LVU348
 1442 0034 1A50     		str	r2, [r3, r0]
 1443              	.LVL90:
 1444              		.loc 3 734 30 view .LVU349
 1445              	.LBE18:
 1446              	.LBE17:
 317:Src/main.c    ****     //TODO: Replace status with actual ultrsonic sensor data.
 1447              		.loc 1 317 5 is_stmt 1 view .LVU350
 317:Src/main.c    ****     //TODO: Replace status with actual ultrsonic sensor data.
 1448              		.loc 1 317 13 is_stmt 0 view .LVU351
 1449 0036 1A4B     		ldr	r3, .L85+8
 1450 0038 1A68     		ldr	r2, [r3]
 1451 003a 0092     		str	r2, [sp]
 1452 003c 9B88     		ldrh	r3, [r3, #4]
 1453 003e 6A46     		mov	r2, sp
 1454 0040 9380     		strh	r3, [r2, #4]
 319:Src/main.c    ****     uint8_t* distance;
 1455              		.loc 1 319 5 is_stmt 1 view .LVU352
 320:Src/main.c    ****     
 1456              		.loc 1 320 5 view .LVU353
 323:Src/main.c    ****     MX_TIM2_Init();
 1457              		.loc 1 323 5 view .LVU354
 1458 0042 FFF7FEFF 		bl	MX_GPIO_Init
 1459              	.LVL91:
 324:Src/main.c    ****     HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1); //Initalized to GPIO pin PA5
 1460              		.loc 1 324 5 view .LVU355
 1461 0046 FFF7FEFF 		bl	MX_TIM2_Init
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 56


 1462              	.LVL92:
 325:Src/main.c    ****     
 1463              		.loc 1 325 5 view .LVU356
 1464 004a 1648     		ldr	r0, .L85+12
 1465 004c 0021     		movs	r1, #0
 1466 004e FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1467              	.LVL93:
 327:Src/main.c    ****     int count = 0;
 1468              		.loc 1 327 5 view .LVU357
 1469 0052 6846     		mov	r0, sp
 1470 0054 FFF7FEFF 		bl	USART_SendString
 1471              	.LVL94:
 328:Src/main.c    ****     while (1)
 1472              		.loc 1 328 5 view .LVU358
 328:Src/main.c    ****     while (1)
 1473              		.loc 1 328 9 is_stmt 0 view .LVU359
 1474 0058 0024     		movs	r4, #0
 1475              	.LVL95:
 1476              	.L80:
 329:Src/main.c    ****     {
 1477              		.loc 1 329 5 is_stmt 1 view .LVU360
 331:Src/main.c    ****         {
 1478              		.loc 1 331 9 view .LVU361
 331:Src/main.c    ****         {
 1479              		.loc 1 331 11 is_stmt 0 view .LVU362
 1480 005a 134B     		ldr	r3, .L85+16
 1481 005c 9C42     		cmp	r4, r3
 1482 005e 10DC     		bgt	.L84
 340:Src/main.c    ****         
 1483              		.loc 1 340 13 is_stmt 1 view .LVU363
 340:Src/main.c    ****         
 1484              		.loc 1 340 18 is_stmt 0 view .LVU364
 1485 0060 0134     		adds	r4, r4, #1
 1486              	.LVL96:
 1487              	.L82:
 343:Src/main.c    ****             if(command[1]){
 1488              		.loc 1 343 9 is_stmt 1 view .LVU365
 343:Src/main.c    ****             if(command[1]){
 1489              		.loc 1 343 12 is_stmt 0 view .LVU366
 1490 0062 124B     		ldr	r3, .L85+20
 1491 0064 1B78     		ldrb	r3, [r3]
 343:Src/main.c    ****             if(command[1]){
 1492              		.loc 1 343 11 view .LVU367
 1493 0066 002B     		cmp	r3, #0
 1494 0068 F7D0     		beq	.L80
 344:Src/main.c    ****                 ProcessCommand(command[0], command[1]);
 1495              		.loc 1 344 13 is_stmt 1 view .LVU368
 344:Src/main.c    ****                 ProcessCommand(command[0], command[1]);
 1496              		.loc 1 344 23 is_stmt 0 view .LVU369
 1497 006a 114B     		ldr	r3, .L85+24
 1498 006c 5B78     		ldrb	r3, [r3, #1]
 344:Src/main.c    ****                 ProcessCommand(command[0], command[1]);
 1499              		.loc 1 344 15 view .LVU370
 1500 006e 002B     		cmp	r3, #0
 1501 0070 F3D0     		beq	.L80
 345:Src/main.c    ****             }
 1502              		.loc 1 345 17 is_stmt 1 view .LVU371
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 57


 345:Src/main.c    ****             }
 1503              		.loc 1 345 39 is_stmt 0 view .LVU372
 1504 0072 0F4B     		ldr	r3, .L85+24
 1505 0074 1878     		ldrb	r0, [r3]
 1506 0076 C0B2     		uxtb	r0, r0
 345:Src/main.c    ****             }
 1507              		.loc 1 345 51 view .LVU373
 1508 0078 5978     		ldrb	r1, [r3, #1]
 1509 007a C9B2     		uxtb	r1, r1
 345:Src/main.c    ****             }
 1510              		.loc 1 345 17 view .LVU374
 1511 007c FFF7FEFF 		bl	ProcessCommand
 1512              	.LVL97:
 1513 0080 EBE7     		b	.L80
 1514              	.L84:
 333:Src/main.c    ****             status = "Ultrasonic Distance: ";
 1515              		.loc 1 333 13 is_stmt 1 view .LVU375
 1516              	.LVL98:
 334:Src/main.c    ****             USART_SendString(status);
 1517              		.loc 1 334 13 view .LVU376
 335:Src/main.c    ****             distance = 5;
 1518              		.loc 1 335 13 view .LVU377
 1519 0082 0C48     		ldr	r0, .L85+28
 1520 0084 FFF7FEFF 		bl	USART_SendString
 1521              	.LVL99:
 336:Src/main.c    ****             USART_SendChar(command[0]);
 1522              		.loc 1 336 13 view .LVU378
 337:Src/main.c    ****         }
 1523              		.loc 1 337 13 view .LVU379
 337:Src/main.c    ****         }
 1524              		.loc 1 337 35 is_stmt 0 view .LVU380
 1525 0088 094B     		ldr	r3, .L85+24
 1526 008a 1878     		ldrb	r0, [r3]
 1527 008c C0B2     		uxtb	r0, r0
 337:Src/main.c    ****         }
 1528              		.loc 1 337 13 view .LVU381
 1529 008e FFF7FEFF 		bl	USART_SendChar
 1530              	.LVL100:
 333:Src/main.c    ****             status = "Ultrasonic Distance: ";
 1531              		.loc 1 333 19 view .LVU382
 1532 0092 0024     		movs	r4, #0
 1533 0094 E5E7     		b	.L82
 1534              	.L86:
 1535 0096 C046     		.align	2
 1536              	.L85:
 1537 0098 00E100E0 		.word	-536813312
 1538 009c FF00FFFF 		.word	-65281
 1539 00a0 00000000 		.word	.LC0
 1540 00a4 00000000 		.word	htim2
 1541 00a8 40420F00 		.word	1000000
 1542 00ac 00000000 		.word	incomingCommand
 1543 00b0 00000000 		.word	command
 1544 00b4 00000000 		.word	.LC30
 1545              		.cfi_endproc
 1546              	.LFE50:
 1548              		.global	incomingCommand
 1549              		.section	.bss.incomingCommand,"aw",%nobits
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 58


 1552              	incomingCommand:
 1553 0000 00       		.space	1
 1554              		.global	command
 1555              		.section	.bss.command,"aw",%nobits
 1556              		.align	2
 1559              	command:
 1560 0000 0000     		.space	2
 1561              		.global	htim2
 1562              		.section	.bss.htim2,"aw",%nobits
 1563              		.align	2
 1566              	htim2:
 1567 0000 00000000 		.space	64
 1567      00000000 
 1567      00000000 
 1567      00000000 
 1567      00000000 
 1568              		.text
 1569              	.Letext0:
 1570              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1571              		.file 5 "/Applications/ArmGNUToolchain/12.2.mpacbti-rel1/arm-none-eabi/arm-none-eabi/include/machi
 1572              		.file 6 "/Applications/ArmGNUToolchain/12.2.mpacbti-rel1/arm-none-eabi/arm-none-eabi/include/sys/_
 1573              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1574              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1575              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1576              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1577              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1578              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1579              		.file 13 "Inc/main.h"
 1580              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1581              		.file 15 "<built-in>"
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:19     .text.MX_GPIO_Init:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:114    .text.MX_GPIO_Init:0000005c $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:119    .text.LED_Init:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:125    .text.LED_Init:00000000 LED_Init
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:186    .text.LED_Init:00000038 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:192    .text.GPIO_AF_Init:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:198    .text.GPIO_AF_Init:00000000 GPIO_AF_Init
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:271    .text.GPIO_AF_Init:00000050 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:279    .text.USART_Init:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:285    .text.USART_Init:00000000 USART_Init
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:358    .text.USART_Init:00000048 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:365    .text.USART_SendChar:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:371    .text.USART_SendChar:00000000 USART_SendChar
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:397    .text.USART_SendChar:00000010 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:402    .text.USART_SendString:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:408    .text.USART_SendString:00000000 USART_SendString
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:453    .rodata.ClearCommand.str1.4:00000000 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:457    .text.ClearCommand:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:463    .text.ClearCommand:00000000 ClearCommand
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:503    .text.ClearCommand:00000024 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1559   .bss.command:00000000 command
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1552   .bss.incomingCommand:00000000 incomingCommand
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:510    .rodata.USART3_4_IRQHandler.str1.4:00000000 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:514    .text.USART3_4_IRQHandler:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:520    .text.USART3_4_IRQHandler:00000000 USART3_4_IRQHandler
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:611    .text.USART3_4_IRQHandler:00000060 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:619    .rodata.ProcessCommand.str1.4:00000000 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:647    .text.ProcessCommand:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:653    .text.ProcessCommand:00000000 ProcessCommand
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:816    .rodata.ProcessCommand:00000000 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:957    .text.ProcessCommand:00000114 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:976    .text.Ultrasonic_Init:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:982    .text.Ultrasonic_Init:00000000 Ultrasonic_Init
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1040   .text.Ultrasonic_Init:00000038 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1045   .text.GetDistance:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1051   .text.GetDistance:00000000 GetDistance
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1065   .text.Error_Handler:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1071   .text.Error_Handler:00000000 Error_Handler
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1103   .text.MX_TIM2_Init:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1108   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1266   .text.MX_TIM2_Init:000000a8 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1566   .bss.htim2:00000000 htim2
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1272   .text.SystemClock_Config:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1278   .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1365   .rodata.main.str1.4:00000000 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1369   .text.main:00000000 $t
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1375   .text.main:00000000 main
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1537   .text.main:00000098 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1553   .bss.incomingCommand:00000000 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1556   .bss.command:00000000 $d
/var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s:1563   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
memset
ARM GAS  /var/folders/xd/7zf7rlc57gsb2q6bmj31zdfh0000gp/T//ccqw6Iuv.s 			page 60


HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_uidiv
HAL_RCC_GetHCLKFreq
HAL_Delay
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_TIM_PWM_Start
